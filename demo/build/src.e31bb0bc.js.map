{"version":3,"sources":["../../node_modules/regenerator-runtime/runtime.js","../../node_modules/avr8js/dist/esm/cpu/cpu.js","../../node_modules/avr8js/dist/esm/cpu/instruction.js","../../node_modules/avr8js/dist/esm/cpu/interrupt.js","../../node_modules/avr8js/dist/esm/peripherals/gpio.js","../../node_modules/avr8js/dist/esm/peripherals/timer.js","../../node_modules/avr8js/dist/esm/peripherals/usart.js","../../node_modules/avr8js/dist/esm/peripherals/eeprom.js","../../node_modules/avr8js/dist/esm/peripherals/twi.js","../../node_modules/avr8js/dist/esm/peripherals/spi.js","../../node_modules/avr8js/dist/esm/index.js","../../src/intelhex.ts","../../src/execute.ts","../../src/drawPixels.js","../../src/ws2812.ts","../../src/arduino.js","../../src/index.js","build.js","index.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["registerSpace","CPU","progMem","sramBytes","data","Uint8Array","data16","Uint16Array","buffer","dataView","DataView","progBytes","readHooks","writeHooks","pc22Bits","length","gpioTimerHooks","pc","cycles","reset","fill","SP","addr","value","hook","getUint16","setUint16","SREG","isTwoWordInstruction","opcode","avrInstruction","cpu","d","r","sum","R","sreg","b","k","ret","sp","A","readData","writeData","val1","val2","arg1","arg2","nextOpcode","skipSize","retAddr","eind","rampz","i","v1","v2","getInt8","setInt16","clear","set","x","y","z","r2","d2","target","a","l","avrInterrupt","portAConfig","PIN","DDR","PORT","portBConfig","portCConfig","portDConfig","portEConfig","portFConfig","portGConfig","portHConfig","portJConfig","portKConfig","portLConfig","PinState","PinOverrideMode","AVRIOPort","portConfig","listeners","pinValue","overrideMask","lastValue","lastDdr","portValue","updatePinRegister","writeGpio","ddrMask","oldPortValue","pin","mode","pinMask","None","Enable","overrideValue","Set","Clear","Toggle","listener","push","filter","index","ddr","port","bitMask","High","Low","InputPullUp","Input","newValue","prevValue","timer01Dividers","defaultTimerBits","TOV","OCFA","OCFB","TOIE","OCIEA","OCIEB","timer0Config","Object","assign","bits","captureInterrupt","compAInterrupt","compBInterrupt","ovfInterrupt","TIFR","OCRA","OCRB","ICR","TCNT","TCCRA","TCCRB","TCCRC","TIMSK","dividers","compPortA","compPinA","compPortB","compPinB","timer1Config","timer2Config","TimerMode","TOVUpdateMode","OCRUpdateMode","TopOCRA","TopICR","wgmModes8Bit","Normal","Immediate","Max","PWMPhaseCorrect","Top","Bottom","CTC","FastPWM","Reserved","wgmModes16Bit","PWMPhaseFrequencyCorrect","compToOverride","comp","AVRTimer","config","lastCycle","ocrA","ocrB","icr","tcnt","tcntUpdated","countingUp","divider","pendingInterrupt","highByteTemp","updateWGMConfig","tick","timerUpdated","updateTempRegister","compA","updateCompA","compB","updateCompB","CS","wgmModes","WGM","timerMode","topValue","delta","counterDelta","Math","floor","val","phasePwm","newVal","phasePwmCount","TOP","interruptsEnabled","updateCompPin","compValue","pinName","inverted","isSet","mask","usart0Config","rxCompleteInterrupt","dataRegisterEmptyInterrupt","txCompleteInterrupt","UCSRA","UCSRB","UCSRC","UBRRL","UBRRH","UDR","UCSRA_RXC","UCSRA_TXC","UCSRA_UDRE","UCSRA_FE","UCSRA_DOR","UCSRA_UPE","UCSRA_U2X","UCSRA_MPCM","UCSRB_RXCIE","UCSRB_TXCIE","UCSRB_UDRIE","UCSRB_RXEN","UCSRB_TXEN","UCSRB_UCSZ2","UCSRB_RXB8","UCSRB_TXB8","UCSRC_UMSEL1","UCSRC_UMSEL0","UCSRC_UPM1","UCSRC_UPM0","UCSRC_USBS","UCSRC_UCSZ1","UCSRC_UCSZ0","UCSRC_UCPOL","AVRUSART","freqMHz","onByteTransmit","onLineTransmit","lineBuffer","oldValue","ch","String","fromCharCode","ucsra","ucsrb","UBRR","multiplier","ucsz","EEPROMMemoryBackend","size","memory","eepromConfig","eepromReadyInterrupt","EECR","EEDR","EEARL","EEARH","eraseCycles","writeCycles","EERE","EEPE","EEMPE","EERIE","EEPM0","EEPM1","AVREEPROM","backend","writeEnabledCycles","writeCompleteCycles","eecr","readMemory","eedr","eraseMemory","writeMemory","TWCR_TWINT","TWCR_TWEA","TWCR_TWSTA","TWCR_TWSTO","TWCR_TWWC","TWCR_TWEN","TWCR_TWIE","TWSR_TWS_MASK","TWSR_TWPS1","TWSR_TWPS0","TWSR_TWPS_MASK","TWAR_TWA_MASK","TWAR_TWGCE","STATUS_BUS_ERROR","STATUS_TWI_IDLE","STATUS_START","STATUS_REPEATED_START","STATUS_SLAW_ACK","STATUS_SLAW_NACK","STATUS_DATA_SENT_ACK","STATUS_DATA_SENT_NACK","STATUS_DATA_LOST_ARBITRATION","STATUS_SLAR_ACK","STATUS_SLAR_NACK","STATUS_DATA_RECEIVED_ACK","STATUS_DATA_RECEIVED_NACK","twiConfig","twiInterrupt","TWBR","TWSR","TWAR","TWDR","TWCR","TWAMR","NoopTWIEventHandler","twi","completeStart","completeStop","completeConnect","completeWrite","completeRead","AVRTWI","eventHandler","nextTick","updateStatus","clearInt","status","twdrValue","start","stop","connectToSlave","writeByte","ack","readByte","Error","prescaler","SPCR_SPIE","SPCR_SPE","SPCR_DORD","SPCR_MSTR","SPCR_CPOL","SPCR_CPHA","SPCR_SPR1","SPCR_SPR0","SPSR_SPR_MASK","SPSR_SPIF","SPSR_WCOL","SPSR_SPI2X","spiConfig","spiInterrupt","SPCR","SPSR","SPDR","bitsPerByte","AVRSPI","onTransfer","transmissionCompleteCycles","receivedByte","_a","_b","call","clockDivider","CPHA","CPOL","base","drawPixels","pixels","canvas","rows","cols","serpentine","ctx","getContext","clearRect","width","height","pixelWidth","pixelHeight","pixel","beginPath","rect","fillStyle","g","shadowColor","MHZ","LEDuino","hex","onPixels","onSerial","console","log","round","runner","matrixController","feedValue","portB","pinState","cpuNanos","execute","_cpu","update","pixelsToDraw","row","col","dataPin","newHex","_hex","removeListener","AVRRunner","WS2812Controller","addListener","usart","module","exports","stdout","stderr","lineInfo","build","document","getElementById","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n","/**\r\n * AVR 8 CPU data structures\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nconst registerSpace = 0x100;\r\nexport class CPU {\r\n    constructor(progMem, sramBytes = 8192) {\r\n        this.progMem = progMem;\r\n        this.sramBytes = sramBytes;\r\n        this.data = new Uint8Array(this.sramBytes + registerSpace);\r\n        this.data16 = new Uint16Array(this.data.buffer);\r\n        this.dataView = new DataView(this.data.buffer);\r\n        this.progBytes = new Uint8Array(this.progMem.buffer);\r\n        this.readHooks = [];\r\n        this.writeHooks = [];\r\n        this.pc22Bits = this.progBytes.length > 0x20000;\r\n        // This lets the Timer Compare output override GPIO pins:\r\n        this.gpioTimerHooks = [];\r\n        this.pc = 0;\r\n        this.cycles = 0;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.data.fill(0);\r\n        this.SP = this.data.length - 1;\r\n    }\r\n    readData(addr) {\r\n        if (addr >= 32 && this.readHooks[addr]) {\r\n            return this.readHooks[addr](addr);\r\n        }\r\n        return this.data[addr];\r\n    }\r\n    writeData(addr, value) {\r\n        const hook = this.writeHooks[addr];\r\n        if (hook) {\r\n            if (hook(value, this.data[addr], addr)) {\r\n                return;\r\n            }\r\n        }\r\n        this.data[addr] = value;\r\n    }\r\n    get SP() {\r\n        return this.dataView.getUint16(93, true);\r\n    }\r\n    set SP(value) {\r\n        this.dataView.setUint16(93, value, true);\r\n    }\r\n    get SREG() {\r\n        return this.data[95];\r\n    }\r\n    get interruptsEnabled() {\r\n        return this.SREG & 0x80 ? true : false;\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Instruction Simulation\r\n * Part of AVR8js\r\n *\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Instruction timing is currently based on ATmega328p (see the Instruction Set Summary at the end of\r\n * the datasheet)\r\n *\r\n * Copyright (C) 2019, 2020 Uri Shaked\r\n */\r\nfunction isTwoWordInstruction(opcode) {\r\n    return (\r\n    /* LDS */\r\n    (opcode & 0xfe0f) === 0x9000 ||\r\n        /* STS */\r\n        (opcode & 0xfe0f) === 0x9200 ||\r\n        /* CALL */\r\n        (opcode & 0xfe0e) === 0x940e ||\r\n        /* JMP */\r\n        (opcode & 0xfe0e) === 0x940c);\r\n}\r\nexport function avrInstruction(cpu) {\r\n    const opcode = cpu.progMem[cpu.pc];\r\n    if ((opcode & 0xfc00) === 0x1c00) {\r\n        /* ADC, 0001 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const sum = d + r + (cpu.data[95] & 1);\r\n        const R = sum & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (d ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= sum & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xc00) {\r\n        /* ADD, 0000 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = (d + r) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (R ^ d) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= (d + r) & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9600) {\r\n        /* ADIW, 1001 0110 KKdd KKKK */\r\n        const addr = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const value = cpu.dataView.getUint16(addr, true);\r\n        const R = (value + ((opcode & 0xf) | ((opcode & 0xc0) >> 2))) & 0xffff;\r\n        cpu.dataView.setUint16(addr, R, true);\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= ~value & R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= ~R & value & 0x8000 ? 1 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2000) {\r\n        /* AND, 0010 00rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] & cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x7000) {\r\n        /* ANDI, 0111 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] & ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9405) {\r\n        /* ASR, 1001 010d dddd 0101 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = (value >>> 1) | (128 & value);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9488) {\r\n        /* BCLR, 1001 0100 1sss 1000 */\r\n        cpu.data[95] &= ~(1 << ((opcode & 0x70) >> 4));\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xf800) {\r\n        /* BLD, 1111 100d dddd 0bbb */\r\n        const b = opcode & 7;\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        cpu.data[d] = (~(1 << b) & cpu.data[d]) | (((cpu.data[95] >> 6) & 1) << b);\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf400) {\r\n        /* BRBC, 1111 01kk kkkk ksss */\r\n        if (!(cpu.data[95] & (1 << (opcode & 7)))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf000) {\r\n        /* BRBS, 1111 00kk kkkk ksss */\r\n        if (cpu.data[95] & (1 << (opcode & 7))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9408) {\r\n        /* BSET, 1001 0100 0sss 1000 */\r\n        cpu.data[95] |= 1 << ((opcode & 0x70) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfa00) {\r\n        /* BST, 1111 101d dddd 0bbb */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const b = opcode & 7;\r\n        cpu.data[95] = (cpu.data[95] & 0xbf) | ((d >> b) & 1 ? 0x40 : 0);\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940e) {\r\n        /* CALL, 1001 010k kkkk 111k kkkk kkkk kkkk kkkk */\r\n        const k = cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13);\r\n        const ret = cpu.pc + 2;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & ret;\r\n        cpu.data[sp - 1] = (ret >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (ret >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = k - 1;\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9800) {\r\n        /* CBI, 1001 1000 AAAA Abbb */\r\n        const A = opcode & 0xf8;\r\n        const b = opcode & 7;\r\n        const R = cpu.readData((A >> 3) + 32);\r\n        cpu.writeData((A >> 3) + 32, R & ~(1 << b));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9400) {\r\n        /* COM, 1001 010d dddd 0000 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const R = 255 - cpu.data[d];\r\n        cpu.data[d] = R;\r\n        let sreg = (cpu.data[95] & 0xe1) | 1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1400) {\r\n        /* CP, 0001 01rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 0 !== ((val1 ^ val2) & (val1 ^ R) & 128) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x400) {\r\n        /* CPC, 0000 01rd dddd rrrr */\r\n        const arg1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const arg2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const r = arg1 - arg2 - (sreg & 1);\r\n        sreg = (sreg & 0xc0) | (!r && (sreg >> 1) & 1 ? 2 : 0) | (arg2 + (sreg & 1) > arg1 ? 1 : 0);\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x3000) {\r\n        /* CPI, 0011 KKKK dddd KKKK */\r\n        const arg1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const arg2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const r = arg1 - arg2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= arg2 > arg1 ? 1 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1000) {\r\n        /* CPSE, 0001 00rd dddd rrrr */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] === cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)]) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.pc += skipSize;\r\n            cpu.cycles += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x940a) {\r\n        /* DEC, 1001 010d dddd 1010 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value - 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === value ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0x9519) {\r\n        /* EICALL, 1001 0101 0001 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const eind = cpu.data[0x5c];\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        cpu.dataView.setUint16(93, sp - 3, true);\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles += 3;\r\n    }\r\n    else if (opcode === 0x9419) {\r\n        /* EIJMP, 1001 0100 0001 1001 */\r\n        const eind = cpu.data[0x5c];\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x95d8) {\r\n        /* ELPM, 1001 0101 1101 1000 */\r\n        const rampz = cpu.data[0x5b];\r\n        cpu.data[0] = cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9006) {\r\n        /* ELPM(REG), 1001 000d dddd 0110 */\r\n        const rampz = cpu.data[0x5b];\r\n        cpu.data[(opcode & 0x1f0) >> 4] =\r\n            cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9007) {\r\n        /* ELPM(INC), 1001 000d dddd 0111 */\r\n        const rampz = cpu.data[0x5b];\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[(rampz << 16) | i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        if (i === 0xffff) {\r\n            cpu.data[0x5b] = (rampz + 1) % (cpu.progBytes.length >> 16);\r\n        }\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2400) {\r\n        /* EOR, 0010 01rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] ^ cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x308) {\r\n        /* FMUL, 0000 0011 0ddd 1rrr */\r\n        const v1 = cpu.data[((opcode & 0x70) >> 4) + 16];\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x380) {\r\n        /* FMULS, 0000 0011 1ddd 0rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.dataView.getInt8((opcode & 7) + 16);\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x388) {\r\n        /* FMULSU, 0000 0011 1ddd 1rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 2 : 0) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x9509) {\r\n        /* ICALL, 1001 0101 0000 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9409) {\r\n        /* IJMP, 1001 0100 0000 1001 */\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb000) {\r\n        /* IN, 1011 0AAd dddd AAAA */\r\n        const i = cpu.readData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = i;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9403) {\r\n        /* INC, 1001 010d dddd 0011 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d + 1) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 127 === d ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940c) {\r\n        /* JMP, 1001 010k kkkk 110k kkkk kkkk kkkk kkkk */\r\n        cpu.pc = (cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13)) - 1;\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9206) {\r\n        /* LAC, 1001 001r rrrr 0110 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const clear = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value & (255 - clear));\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9205) {\r\n        /* LAS, 1001 001r rrrr 0101 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const set = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value | set);\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9207) {\r\n        /* LAT, 1001 001r rrrr 0111 */\r\n        const r = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), r ^ R);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xe000) {\r\n        /* LDI, 1110 KKKK dddd KKKK */\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9000) {\r\n        /* LDS, 1001 000d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        cpu.cycles++;\r\n        const value = cpu.readData(cpu.progMem[cpu.pc + 1]);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = value;\r\n        cpu.pc++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900c) {\r\n        /* LDX, 1001 000d dddd 1100 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(26, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900d) {\r\n        /* LDX(INC), 1001 000d dddd 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900e) {\r\n        /* LDX(DEC), 1001 000d dddd 1110 */\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8008) {\r\n        /* LDY, 1000 000d dddd 1000 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9009) {\r\n        /* LDY(INC), 1001 000d dddd 1001 */\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900a) {\r\n        /* LDY(DEC), 1001 000d dddd 1010 */\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8008 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDY, 10q0 qq0d dddd 1qqq */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8000) {\r\n        /* LDZ, 1000 000d dddd 0000 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9001) {\r\n        /* LDZ(INC), 1001 000d dddd 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9002) {\r\n        /* LDZ(DEC), 1001 000d dddd 0010 */\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8000 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDZ, 10q0 qq0d dddd 0qqq */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n    }\r\n    else if (opcode === 0x95c8) {\r\n        /* LPM, 1001 0101 1100 1000 */\r\n        cpu.data[0] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9004) {\r\n        /* LPM(REG), 1001 000d dddd 0100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9005) {\r\n        /* LPM(INC), 1001 000d dddd 0101 */\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9406) {\r\n        /* LSR, 1001 010d dddd 0110 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value >>> 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2c00) {\r\n        /* MOV, 0010 11rd dddd rrrr */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n    }\r\n    else if ((opcode & 0xff00) === 0x100) {\r\n        /* MOVW, 0000 0001 dddd rrrr */\r\n        const r2 = 2 * (opcode & 0xf);\r\n        const d2 = 2 * ((opcode & 0xf0) >> 4);\r\n        cpu.data[d2] = cpu.data[r2];\r\n        cpu.data[d2 + 1] = cpu.data[r2 + 1];\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x9c00) {\r\n        /* MUL, 1001 11rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] * cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x200) {\r\n        /* MULS, 0000 0010 dddd rrrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0xf0) >> 4) + 16) * cpu.dataView.getInt8((opcode & 0xf) + 16);\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x300) {\r\n        /* MULSU, 0000 0011 0ddd 0rrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16) * cpu.data[(opcode & 7) + 16];\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9401) {\r\n        /* NEG, 1001 010d dddd 0001 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const value = cpu.data[d];\r\n        const R = 0 - value;\r\n        cpu.data[d] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === R ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= R ? 1 : 0;\r\n        sreg |= 1 & (R | value) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0) {\r\n        /* NOP, 0000 0000 0000 0000 */\r\n        /* NOP */\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2800) {\r\n        /* OR, 0010 10rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] | cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x6000) {\r\n        /* SBR, 0110 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] | ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb800) {\r\n        /* OUT, 1011 1AAr rrrr AAAA */\r\n        cpu.writeData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32, cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900f) {\r\n        /* POP, 1001 000d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true) + 1;\r\n        cpu.dataView.setUint16(93, value, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[value];\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920f) {\r\n        /* PUSH, 1001 001d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true);\r\n        cpu.data[value] = cpu.data[(opcode & 0x1f0) >> 4];\r\n        cpu.dataView.setUint16(93, value - 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xd000) {\r\n        /* RCALL, 1101 kkkk kkkk kkkk */\r\n        const k = (opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0);\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & retAddr;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc += k;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9508) {\r\n        /* RET, 1001 0101 0000 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if (opcode === 0x9518) {\r\n        /* RETI, 1001 0101 0001 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n        cpu.data[95] |= 0x80; // Enable interrupts\r\n    }\r\n    else if ((opcode & 0xf000) === 0xc000) {\r\n        /* RJMP, 1100 kkkk kkkk kkkk */\r\n        cpu.pc = cpu.pc + ((opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9407) {\r\n        /* ROR, 1001 010d dddd 0111 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d >>> 1) | ((cpu.data[95] & 1) << 7);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 1 & d ? 1 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x800) {\r\n        /* SBC, 0000 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x4000) {\r\n        /* SBCI, 0100 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9a00) {\r\n        /* SBI, 1001 1010 AAAA Abbb */\r\n        const target = ((opcode & 0xf8) >> 3) + 32;\r\n        cpu.writeData(target, cpu.readData(target) | (1 << (opcode & 7)));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9900) {\r\n        /* SBIC, 1001 1001 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (!(value & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9b00) {\r\n        /* SBIS, 1001 1011 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (value & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9700) {\r\n        /* SBIW, 1001 0111 KKdd KKKK */\r\n        const i = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const a = cpu.dataView.getUint16(i, true);\r\n        const l = (opcode & 0xf) | ((opcode & 0xc0) >> 2);\r\n        const R = a - l;\r\n        cpu.dataView.setUint16(i, R, true);\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= a & ~R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= l > a ? 1 : 0;\r\n        sreg |= 1 & ((~a & l) | (l & R) | (R & ~a)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfc00) {\r\n        /* SBRC, 1111 110r rrrr 0bbb */\r\n        if (!(cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfe00) {\r\n        /* SBRS, 1111 111r rrrr 0bbb */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if (opcode === 0x9588) {\r\n        /* SLEEP, 1001 0101 1000 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95e8) {\r\n        /* SPM, 1001 0101 1110 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95f8) {\r\n        /* SPM(INC), 1001 0101 1111 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9200) {\r\n        /* STS, 1001 001d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const addr = cpu.progMem[cpu.pc + 1];\r\n        cpu.writeData(addr, value);\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920c) {\r\n        /* STX, 1001 001r rrrr 1100 */\r\n        cpu.writeData(cpu.dataView.getUint16(26, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920d) {\r\n        /* STX(INC), 1001 001r rrrr 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.writeData(x, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920e) {\r\n        /* STX(DEC), 1001 001r rrrr 1110 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.writeData(x, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8208) {\r\n        /* STY, 1000 001r rrrr 1000 */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9209) {\r\n        /* STY(INC), 1001 001r rrrr 1001 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.writeData(y, i);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920a) {\r\n        /* STY(DEC), 1001 001r rrrr 1010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.writeData(y, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8208 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDY, 10q0 qq1r rrrr 1qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8200) {\r\n        /* STZ, 1000 001r rrrr 0000 */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9201) {\r\n        /* STZ(INC), 1001 001r rrrr 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.writeData(z, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9202) {\r\n        /* STZ(DEC), 1001 001r rrrr 0010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.writeData(z, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8200 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDZ, 10q0 qq1r rrrr 0qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1800) {\r\n        /* SUB, 0001 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x5000) {\r\n        /* SUBI, 0101 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const R = val1 - val2;\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9402) {\r\n        /* SWAP, 1001 010d dddd 0010 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const i = cpu.data[d];\r\n        cpu.data[d] = ((15 & i) << 4) | ((240 & i) >>> 4);\r\n    }\r\n    else if (opcode === 0x95a8) {\r\n        /* WDR, 1001 0101 1010 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9204) {\r\n        /* XCH, 1001 001r rrrr 0100 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const val1 = cpu.data[r];\r\n        const val2 = cpu.data[cpu.dataView.getUint16(30, true)];\r\n        cpu.data[cpu.dataView.getUint16(30, true)] = val1;\r\n        cpu.data[r] = val2;\r\n    }\r\n    cpu.pc = (cpu.pc + 1) % cpu.progMem.length;\r\n    cpu.cycles++;\r\n}\r\n","/**\r\n * AVR-8 Interrupt Handling\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nexport function avrInterrupt(cpu, addr) {\r\n    const sp = cpu.dataView.getUint16(93, true);\r\n    cpu.data[sp] = cpu.pc & 0xff;\r\n    cpu.data[sp - 1] = (cpu.pc >> 8) & 0xff;\r\n    if (cpu.pc22Bits) {\r\n        cpu.data[sp - 2] = (cpu.pc >> 16) & 0xff;\r\n    }\r\n    cpu.dataView.setUint16(93, sp - (cpu.pc22Bits ? 3 : 2), true);\r\n    cpu.data[95] &= 0x7f; // clear global interrupt flag\r\n    cpu.cycles += 2;\r\n    cpu.pc = addr;\r\n}\r\n","export const portAConfig = {\r\n    PIN: 0x20,\r\n    DDR: 0x21,\r\n    PORT: 0x22,\r\n};\r\nexport const portBConfig = {\r\n    PIN: 0x23,\r\n    DDR: 0x24,\r\n    PORT: 0x25,\r\n};\r\nexport const portCConfig = {\r\n    PIN: 0x26,\r\n    DDR: 0x27,\r\n    PORT: 0x28,\r\n};\r\nexport const portDConfig = {\r\n    PIN: 0x29,\r\n    DDR: 0x2a,\r\n    PORT: 0x2b,\r\n};\r\nexport const portEConfig = {\r\n    PIN: 0x2c,\r\n    DDR: 0x2d,\r\n    PORT: 0x2e,\r\n};\r\nexport const portFConfig = {\r\n    PIN: 0x2f,\r\n    DDR: 0x30,\r\n    PORT: 0x31,\r\n};\r\nexport const portGConfig = {\r\n    PIN: 0x32,\r\n    DDR: 0x33,\r\n    PORT: 0x34,\r\n};\r\nexport const portHConfig = {\r\n    PIN: 0x100,\r\n    DDR: 0x101,\r\n    PORT: 0x102,\r\n};\r\nexport const portJConfig = {\r\n    PIN: 0x103,\r\n    DDR: 0x104,\r\n    PORT: 0x105,\r\n};\r\nexport const portKConfig = {\r\n    PIN: 0x106,\r\n    DDR: 0x107,\r\n    PORT: 0x108,\r\n};\r\nexport const portLConfig = {\r\n    PIN: 0x109,\r\n    DDR: 0x10a,\r\n    PORT: 0x10b,\r\n};\r\nexport var PinState;\r\n(function (PinState) {\r\n    PinState[PinState[\"Low\"] = 0] = \"Low\";\r\n    PinState[PinState[\"High\"] = 1] = \"High\";\r\n    PinState[PinState[\"Input\"] = 2] = \"Input\";\r\n    PinState[PinState[\"InputPullUp\"] = 3] = \"InputPullUp\";\r\n})(PinState || (PinState = {}));\r\n/* This mechanism allows timers to override specific GPIO pins */\r\nexport var PinOverrideMode;\r\n(function (PinOverrideMode) {\r\n    PinOverrideMode[PinOverrideMode[\"None\"] = 0] = \"None\";\r\n    PinOverrideMode[PinOverrideMode[\"Enable\"] = 1] = \"Enable\";\r\n    PinOverrideMode[PinOverrideMode[\"Set\"] = 2] = \"Set\";\r\n    PinOverrideMode[PinOverrideMode[\"Clear\"] = 3] = \"Clear\";\r\n    PinOverrideMode[PinOverrideMode[\"Toggle\"] = 4] = \"Toggle\";\r\n})(PinOverrideMode || (PinOverrideMode = {}));\r\nexport class AVRIOPort {\r\n    constructor(cpu, portConfig) {\r\n        this.cpu = cpu;\r\n        this.portConfig = portConfig;\r\n        this.listeners = [];\r\n        this.pinValue = 0;\r\n        this.overrideMask = 0xff;\r\n        this.lastValue = 0;\r\n        this.lastDdr = 0;\r\n        cpu.writeHooks[portConfig.DDR] = (value) => {\r\n            const portValue = cpu.data[portConfig.PORT];\r\n            cpu.data[portConfig.DDR] = value;\r\n            this.updatePinRegister(portValue, value);\r\n            this.writeGpio(portValue, value);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PORT] = (value) => {\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            cpu.data[portConfig.PORT] = value;\r\n            this.updatePinRegister(value, ddrMask);\r\n            this.writeGpio(value, ddrMask);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PIN] = (value) => {\r\n            // Writing to 1 PIN toggles PORT bits\r\n            const oldPortValue = cpu.data[portConfig.PORT];\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            const portValue = oldPortValue ^ value;\r\n            cpu.data[portConfig.PORT] = portValue;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | (portValue & ddrMask);\r\n            this.writeGpio(portValue, ddrMask);\r\n            return true;\r\n        };\r\n        // The following hook is used by the timer compare output to override GPIO pins:\r\n        cpu.gpioTimerHooks[portConfig.PORT] = (pin, mode) => {\r\n            const pinMask = 1 << pin;\r\n            if (mode == PinOverrideMode.None) {\r\n                this.overrideMask |= pinMask;\r\n            }\r\n            else {\r\n                this.overrideMask &= ~pinMask;\r\n                switch (mode) {\r\n                    case PinOverrideMode.Enable:\r\n                        this.overrideValue &= ~pinMask;\r\n                        this.overrideValue |= cpu.data[portConfig.PORT] & pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Set:\r\n                        this.overrideValue |= pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Clear:\r\n                        this.overrideValue &= ~pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Toggle:\r\n                        this.overrideValue ^= pinMask;\r\n                        break;\r\n                }\r\n            }\r\n            this.writeGpio(cpu.data[portConfig.PORT], cpu.data[portConfig.DDR]);\r\n        };\r\n    }\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    removeListener(listener) {\r\n        this.listeners = this.listeners.filter((l) => l !== listener);\r\n    }\r\n    /**\r\n     * Get the state of a given GPIO pin\r\n     *\r\n     * @param index Pin index to return from 0 to 7\r\n     * @returns PinState.Low or PinState.High if the pin is set to output, PinState.Input if the pin is set\r\n     *   to input, and PinState.InputPullUp if the pin is set to input and the internal pull-up resistor has\r\n     *   been enabled.\r\n     */\r\n    pinState(index) {\r\n        const ddr = this.cpu.data[this.portConfig.DDR];\r\n        const port = this.cpu.data[this.portConfig.PORT];\r\n        const bitMask = 1 << index;\r\n        if (ddr & bitMask) {\r\n            return this.lastValue & bitMask ? PinState.High : PinState.Low;\r\n        }\r\n        else {\r\n            return port & bitMask ? PinState.InputPullUp : PinState.Input;\r\n        }\r\n    }\r\n    /**\r\n     * Sets the input value for the given pin. This is the value that\r\n     * will be returned when reading from the PIN register.\r\n     */\r\n    setPin(index, value) {\r\n        const bitMask = 1 << index;\r\n        this.pinValue &= ~bitMask;\r\n        if (value) {\r\n            this.pinValue |= bitMask;\r\n        }\r\n        this.updatePinRegister(this.cpu.data[this.portConfig.PORT], this.cpu.data[this.portConfig.DDR]);\r\n    }\r\n    updatePinRegister(port, ddr) {\r\n        this.cpu.data[this.portConfig.PIN] = (this.pinValue & ~ddr) | (port & ddr);\r\n    }\r\n    writeGpio(value, ddr) {\r\n        const newValue = (((value & this.overrideMask) | this.overrideValue) & ddr) | (value & ~ddr);\r\n        const prevValue = this.lastValue;\r\n        if (newValue !== prevValue || ddr !== this.lastDdr) {\r\n            this.lastValue = newValue;\r\n            this.lastDdr = ddr;\r\n            for (const listener of this.listeners) {\r\n                listener(newValue, prevValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Timers\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nimport { avrInterrupt } from '../cpu/interrupt';\r\nimport { portBConfig, portDConfig, PinOverrideMode } from './gpio';\r\nconst timer01Dividers = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 8,\r\n    3: 64,\r\n    4: 256,\r\n    5: 1024,\r\n    6: 0,\r\n    7: 0,\r\n};\r\n/** These are differnet for some devices (e.g. ATtiny85) */\r\nconst defaultTimerBits = {\r\n    // TIFR bits\r\n    TOV: 1,\r\n    OCFA: 2,\r\n    OCFB: 4,\r\n    // TIMSK bits\r\n    TOIE: 1,\r\n    OCIEA: 2,\r\n    OCIEB: 4,\r\n};\r\nexport const timer0Config = Object.assign({ bits: 8, captureInterrupt: 0, compAInterrupt: 0x1c, compBInterrupt: 0x1e, ovfInterrupt: 0x20, TIFR: 0x35, OCRA: 0x47, OCRB: 0x48, ICR: 0, TCNT: 0x46, TCCRA: 0x44, TCCRB: 0x45, TCCRC: 0, TIMSK: 0x6e, dividers: timer01Dividers, compPortA: portDConfig.PORT, compPinA: 6, compPortB: portDConfig.PORT, compPinB: 5 }, defaultTimerBits);\r\nexport const timer1Config = Object.assign({ bits: 16, captureInterrupt: 0x14, compAInterrupt: 0x16, compBInterrupt: 0x18, ovfInterrupt: 0x1a, TIFR: 0x36, OCRA: 0x88, OCRB: 0x8a, ICR: 0x86, TCNT: 0x84, TCCRA: 0x80, TCCRB: 0x81, TCCRC: 0x82, TIMSK: 0x6f, dividers: timer01Dividers, compPortA: portBConfig.PORT, compPinA: 1, compPortB: portBConfig.PORT, compPinB: 2 }, defaultTimerBits);\r\nexport const timer2Config = Object.assign({ bits: 8, captureInterrupt: 0, compAInterrupt: 0x0e, compBInterrupt: 0x10, ovfInterrupt: 0x12, TIFR: 0x37, OCRA: 0xb3, OCRB: 0xb4, ICR: 0, TCNT: 0xb2, TCCRA: 0xb0, TCCRB: 0xb1, TCCRC: 0, TIMSK: 0x70, dividers: {\r\n        0: 0,\r\n        1: 1,\r\n        2: 8,\r\n        3: 32,\r\n        4: 64,\r\n        5: 128,\r\n        6: 256,\r\n        7: 1024,\r\n    }, compPortA: portBConfig.PORT, compPinA: 3, compPortB: portDConfig.PORT, compPinB: 3 }, defaultTimerBits);\r\n/* All the following types and constants are related to WGM (Waveform Generation Mode) bits: */\r\nvar TimerMode;\r\n(function (TimerMode) {\r\n    TimerMode[TimerMode[\"Normal\"] = 0] = \"Normal\";\r\n    TimerMode[TimerMode[\"PWMPhaseCorrect\"] = 1] = \"PWMPhaseCorrect\";\r\n    TimerMode[TimerMode[\"CTC\"] = 2] = \"CTC\";\r\n    TimerMode[TimerMode[\"FastPWM\"] = 3] = \"FastPWM\";\r\n    TimerMode[TimerMode[\"PWMPhaseFrequencyCorrect\"] = 4] = \"PWMPhaseFrequencyCorrect\";\r\n    TimerMode[TimerMode[\"Reserved\"] = 5] = \"Reserved\";\r\n})(TimerMode || (TimerMode = {}));\r\nvar TOVUpdateMode;\r\n(function (TOVUpdateMode) {\r\n    TOVUpdateMode[TOVUpdateMode[\"Max\"] = 0] = \"Max\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(TOVUpdateMode || (TOVUpdateMode = {}));\r\nvar OCRUpdateMode;\r\n(function (OCRUpdateMode) {\r\n    OCRUpdateMode[OCRUpdateMode[\"Immediate\"] = 0] = \"Immediate\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(OCRUpdateMode || (OCRUpdateMode = {}));\r\nconst TopOCRA = 1;\r\nconst TopICR = 2;\r\nconst wgmModes8Bit = [\r\n    /*0*/ [TimerMode.Normal, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*1*/ [TimerMode.PWMPhaseCorrect, 0xff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*2*/ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*3*/ [TimerMode.FastPWM, 0xff, OCRUpdateMode.Bottom, TOVUpdateMode.Max],\r\n    /*4*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*5*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*6*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*7*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n];\r\n// Table 16-4 in the datasheet\r\nconst wgmModes16Bit = [\r\n    /*0 */ [TimerMode.Normal, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*1 */ [TimerMode.PWMPhaseCorrect, 0x00ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*2 */ [TimerMode.PWMPhaseCorrect, 0x01ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*3 */ [TimerMode.PWMPhaseCorrect, 0x03ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*4 */ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*5 */ [TimerMode.FastPWM, 0x00ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*6 */ [TimerMode.FastPWM, 0x01ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*7 */ [TimerMode.FastPWM, 0x03ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*8 */ [TimerMode.PWMPhaseFrequencyCorrect, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\r\n    /*9 */ [TimerMode.PWMPhaseFrequencyCorrect, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\r\n    /*10*/ [TimerMode.PWMPhaseCorrect, TopICR, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*11*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*12*/ [TimerMode.CTC, TopICR, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*13*/ [TimerMode.Reserved, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*14*/ [TimerMode.FastPWM, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*15*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n];\r\nfunction compToOverride(comp) {\r\n    switch (comp) {\r\n        case 1:\r\n            return PinOverrideMode.Toggle;\r\n        case 2:\r\n            return PinOverrideMode.Clear;\r\n        case 3:\r\n            return PinOverrideMode.Set;\r\n        default:\r\n            return PinOverrideMode.Enable;\r\n    }\r\n}\r\nexport class AVRTimer {\r\n    constructor(cpu, config) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n        this.icr = 0; // only for 16-bit timers\r\n        this.tcnt = 0;\r\n        this.tcntUpdated = false;\r\n        this.countingUp = true;\r\n        this.divider = 0;\r\n        this.pendingInterrupt = false;\r\n        // This is the temporary register used to access 16-bit registers (section 16.3 of the datasheet)\r\n        this.highByteTemp = 0;\r\n        this.updateWGMConfig();\r\n        this.cpu.readHooks[config.TCNT] = (addr) => {\r\n            this.tick();\r\n            if (this.config.bits === 16) {\r\n                this.cpu.data[addr + 1] = this.tcnt >> 8;\r\n            }\r\n            return (this.cpu.data[addr] = this.tcnt & 0xff);\r\n        };\r\n        this.cpu.writeHooks[config.TCNT] = (value) => {\r\n            this.tcnt = (this.highByteTemp << 8) | value;\r\n            this.countingUp = true;\r\n            this.tcntUpdated = true;\r\n            this.timerUpdated();\r\n        };\r\n        this.cpu.writeHooks[config.OCRA] = (value) => {\r\n            // TODO implement buffering when timer running in PWM mode\r\n            this.ocrA = (this.highByteTemp << 8) | value;\r\n        };\r\n        this.cpu.writeHooks[config.OCRB] = (value) => {\r\n            // TODO implement buffering when timer running in PWM mode\r\n            this.ocrB = (this.highByteTemp << 8) | value;\r\n        };\r\n        this.cpu.writeHooks[config.ICR] = (value) => {\r\n            this.icr = (this.highByteTemp << 8) | value;\r\n        };\r\n        if (this.config.bits === 16) {\r\n            const updateTempRegister = (value) => {\r\n                this.highByteTemp = value;\r\n            };\r\n            this.cpu.writeHooks[config.TCNT + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.OCRA + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.OCRB + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.ICR + 1] = updateTempRegister;\r\n        }\r\n        cpu.writeHooks[config.TCCRA] = (value) => {\r\n            this.cpu.data[config.TCCRA] = value;\r\n            this.compA = ((value >> 6) & 0x3);\r\n            this.updateCompA(this.compA ? PinOverrideMode.Enable : PinOverrideMode.None);\r\n            this.compB = ((value >> 4) & 0x3);\r\n            this.updateCompB(this.compB ? PinOverrideMode.Enable : PinOverrideMode.None);\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.TCCRB] = (value) => {\r\n            this.cpu.data[config.TCCRB] = value;\r\n            this.tcntUpdated = true;\r\n            this.divider = this.config.dividers[this.CS];\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n    }\r\n    reset() {\r\n        this.divider = 0;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n    }\r\n    get TIFR() {\r\n        return this.cpu.data[this.config.TIFR];\r\n    }\r\n    set TIFR(value) {\r\n        this.pendingInterrupt = value > 0;\r\n        this.cpu.data[this.config.TIFR] = value;\r\n    }\r\n    get TCCRA() {\r\n        return this.cpu.data[this.config.TCCRA];\r\n    }\r\n    get TCCRB() {\r\n        return this.cpu.data[this.config.TCCRB];\r\n    }\r\n    get TIMSK() {\r\n        return this.cpu.data[this.config.TIMSK];\r\n    }\r\n    get CS() {\r\n        return (this.TCCRB & 0x7);\r\n    }\r\n    get WGM() {\r\n        const mask = this.config.bits === 16 ? 0x18 : 0x8;\r\n        return ((this.TCCRB & mask) >> 1) | (this.TCCRA & 0x3);\r\n    }\r\n    get TOP() {\r\n        switch (this.topValue) {\r\n            case TopOCRA:\r\n                return this.ocrA;\r\n            case TopICR:\r\n                return this.icr;\r\n            default:\r\n                return this.topValue;\r\n        }\r\n    }\r\n    updateWGMConfig() {\r\n        const wgmModes = this.config.bits === 16 ? wgmModes16Bit : wgmModes8Bit;\r\n        const [timerMode, topValue] = wgmModes[this.WGM];\r\n        this.timerMode = timerMode;\r\n        this.topValue = topValue;\r\n    }\r\n    tick() {\r\n        const { divider, lastCycle } = this;\r\n        const delta = this.cpu.cycles - lastCycle;\r\n        if (divider && delta >= divider) {\r\n            const counterDelta = Math.floor(delta / divider);\r\n            this.lastCycle += counterDelta * divider;\r\n            const val = this.tcnt;\r\n            const { timerMode } = this;\r\n            const phasePwm = timerMode === TimerMode.PWMPhaseCorrect || timerMode === TimerMode.PWMPhaseFrequencyCorrect;\r\n            const newVal = phasePwm\r\n                ? this.phasePwmCount(val, counterDelta)\r\n                : (val + counterDelta) % (this.TOP + 1);\r\n            // A CPU write overrides (has priority over) all counter clear or count operations.\r\n            if (!this.tcntUpdated) {\r\n                this.tcnt = newVal;\r\n                this.timerUpdated();\r\n            }\r\n            if ((timerMode === TimerMode.Normal || timerMode === TimerMode.FastPWM) && val > newVal) {\r\n                this.TIFR |= this.config.TOV;\r\n            }\r\n        }\r\n        this.tcntUpdated = false;\r\n        if (this.cpu.interruptsEnabled && this.pendingInterrupt) {\r\n            const { TIFR, TIMSK } = this;\r\n            const { TOV, OCFA, OCFB, TOIE, OCIEA, OCIEB } = this.config;\r\n            if (TIFR & TOV && TIMSK & TOIE) {\r\n                avrInterrupt(this.cpu, this.config.ovfInterrupt);\r\n                this.TIFR &= ~TOV;\r\n            }\r\n            if (TIFR & OCFA && TIMSK & OCIEA) {\r\n                avrInterrupt(this.cpu, this.config.compAInterrupt);\r\n                this.TIFR &= ~OCFA;\r\n            }\r\n            if (TIFR & OCFB && TIMSK & OCIEB) {\r\n                avrInterrupt(this.cpu, this.config.compBInterrupt);\r\n                this.TIFR &= ~OCFB;\r\n            }\r\n            this.pendingInterrupt = false;\r\n        }\r\n    }\r\n    phasePwmCount(value, delta) {\r\n        while (delta > 0) {\r\n            if (this.countingUp) {\r\n                value++;\r\n                if (value === this.TOP && !this.tcntUpdated) {\r\n                    this.countingUp = false;\r\n                }\r\n            }\r\n            else {\r\n                value--;\r\n                if (!value && !this.tcntUpdated) {\r\n                    this.countingUp = true;\r\n                    this.TIFR |= this.config.TOV;\r\n                }\r\n            }\r\n            delta--;\r\n        }\r\n        return value;\r\n    }\r\n    timerUpdated() {\r\n        const value = this.tcnt;\r\n        if (this.ocrA && value === this.ocrA) {\r\n            const { TOV, OCFA } = this.config;\r\n            this.TIFR |= OCFA;\r\n            if (this.timerMode === TimerMode.CTC) {\r\n                // Clear Timer on Compare Match (CTC) Mode\r\n                this.tcnt = 0;\r\n                this.TIFR |= TOV;\r\n            }\r\n            if (this.compA) {\r\n                this.updateCompPin(this.compA, 'A');\r\n            }\r\n        }\r\n        if (this.ocrB && value === this.ocrB) {\r\n            this.TIFR |= this.config.OCFB;\r\n            if (this.compB) {\r\n                this.updateCompPin(this.compB, 'B');\r\n            }\r\n        }\r\n    }\r\n    updateCompPin(compValue, pinName) {\r\n        let newValue = PinOverrideMode.None;\r\n        const inverted = compValue === 3;\r\n        const isSet = this.countingUp === inverted;\r\n        switch (this.timerMode) {\r\n            case TimerMode.Normal:\r\n            case TimerMode.CTC:\r\n            case TimerMode.FastPWM:\r\n                newValue = compToOverride(compValue);\r\n                break;\r\n            case TimerMode.PWMPhaseCorrect:\r\n            case TimerMode.PWMPhaseFrequencyCorrect:\r\n                newValue = isSet ? PinOverrideMode.Set : PinOverrideMode.Clear;\r\n                break;\r\n        }\r\n        if (newValue !== PinOverrideMode.None) {\r\n            if (pinName === 'A') {\r\n                this.updateCompA(newValue);\r\n            }\r\n            else {\r\n                this.updateCompB(newValue);\r\n            }\r\n        }\r\n    }\r\n    updateCompA(value) {\r\n        const { compPortA, compPinA } = this.config;\r\n        const hook = this.cpu.gpioTimerHooks[compPortA];\r\n        if (hook) {\r\n            hook(compPinA, value, compPortA);\r\n        }\r\n    }\r\n    updateCompB(value) {\r\n        const { compPortB, compPinB } = this.config;\r\n        const hook = this.cpu.gpioTimerHooks[compPortB];\r\n        if (hook) {\r\n            hook(compPinB, value, compPortB);\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\nexport const usart0Config = {\r\n    rxCompleteInterrupt: 0x24,\r\n    dataRegisterEmptyInterrupt: 0x26,\r\n    txCompleteInterrupt: 0x28,\r\n    UCSRA: 0xc0,\r\n    UCSRB: 0xc1,\r\n    UCSRC: 0xc2,\r\n    UBRRL: 0xc4,\r\n    UBRRH: 0xc5,\r\n    UDR: 0xc6,\r\n};\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst UCSRA_RXC = 0x80; // USART Receive Complete\r\nconst UCSRA_TXC = 0x40; // USART Transmit Complete\r\nconst UCSRA_UDRE = 0x20; // USART Data Register Empty\r\nconst UCSRA_FE = 0x10; // Frame Error\r\nconst UCSRA_DOR = 0x8; // Data OverRun\r\nconst UCSRA_UPE = 0x4; // USART Parity Error\r\nconst UCSRA_U2X = 0x2; // Double the USART Transmission Speed\r\nconst UCSRA_MPCM = 0x1; // Multi-processor Communication Mode\r\nconst UCSRB_RXCIE = 0x80; // RX Complete Interrupt Enable\r\nconst UCSRB_TXCIE = 0x40; // TX Complete Interrupt Enable\r\nconst UCSRB_UDRIE = 0x20; // USART Data Register Empty Interrupt Enable\r\nconst UCSRB_RXEN = 0x10; // Receiver Enable\r\nconst UCSRB_TXEN = 0x8; // Transmitter Enable\r\nconst UCSRB_UCSZ2 = 0x4; // Character Size 2\r\nconst UCSRB_RXB8 = 0x2; // Receive Data Bit 8\r\nconst UCSRB_TXB8 = 0x1; // Transmit Data Bit 8\r\nconst UCSRC_UMSEL1 = 0x80; // USART Mode Select 1\r\nconst UCSRC_UMSEL0 = 0x40; // USART Mode Select 0\r\nconst UCSRC_UPM1 = 0x20; // Parity Mode 1\r\nconst UCSRC_UPM0 = 0x10; // Parity Mode 0\r\nconst UCSRC_USBS = 0x8; // Stop Bit Select\r\nconst UCSRC_UCSZ1 = 0x4; // Character Size 1\r\nconst UCSRC_UCSZ0 = 0x2; // Character Size 0\r\nconst UCSRC_UCPOL = 0x1; // Clock Polarity\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport class AVRUSART {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.onByteTransmit = null;\r\n        this.onLineTransmit = null;\r\n        this.lineBuffer = '';\r\n        this.cpu.writeHooks[config.UCSRA] = (value) => {\r\n            this.cpu.data[config.UCSRA] = value | UCSRA_UDRE | UCSRA_TXC;\r\n            return true;\r\n        };\r\n        this.cpu.writeHooks[config.UCSRB] = (value, oldValue) => {\r\n            if (value & UCSRB_TXEN && !(oldValue & UCSRB_TXEN)) {\r\n                // Enabling the transmission - mark UDR as empty\r\n                this.cpu.data[config.UCSRA] |= UCSRA_UDRE;\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.UDR] = (value) => {\r\n            if (this.onByteTransmit) {\r\n                this.onByteTransmit(value);\r\n            }\r\n            if (this.onLineTransmit) {\r\n                const ch = String.fromCharCode(value);\r\n                if (ch === '\\n') {\r\n                    this.onLineTransmit(this.lineBuffer);\r\n                    this.lineBuffer = '';\r\n                }\r\n                else {\r\n                    this.lineBuffer += ch;\r\n                }\r\n            }\r\n            this.cpu.data[config.UCSRA] |= UCSRA_UDRE | UCSRA_TXC;\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.cpu.interruptsEnabled) {\r\n            const ucsra = this.cpu.data[this.config.UCSRA];\r\n            const ucsrb = this.cpu.data[this.config.UCSRB];\r\n            if (ucsra & UCSRA_UDRE && ucsrb & UCSRB_UDRIE) {\r\n                avrInterrupt(this.cpu, this.config.dataRegisterEmptyInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_UDRE;\r\n            }\r\n            if (ucsra & UCSRA_TXC && ucsrb & UCSRB_TXCIE) {\r\n                avrInterrupt(this.cpu, this.config.txCompleteInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_TXC;\r\n            }\r\n        }\r\n    }\r\n    get baudRate() {\r\n        const UBRR = (this.cpu.data[this.config.UBRRH] << 8) | this.cpu.data[this.config.UBRRL];\r\n        const multiplier = this.cpu.data[this.config.UCSRA] & UCSRA_U2X ? 8 : 16;\r\n        return Math.floor(this.freqMHz / (multiplier * (1 + UBRR)));\r\n    }\r\n    get bitsPerChar() {\r\n        const ucsz = ((this.cpu.data[this.config.UCSRC] & (UCSRC_UCSZ1 | UCSRC_UCSZ0)) >> 1) |\r\n            (this.cpu.data[this.config.UCSRB] & UCSRB_UCSZ2);\r\n        switch (ucsz) {\r\n            case 0:\r\n                return 5;\r\n            case 1:\r\n                return 6;\r\n            case 2:\r\n                return 7;\r\n            case 3:\r\n                return 8;\r\n            default: // 4..6 are reserved\r\n            case 7:\r\n                return 9;\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\nexport class EEPROMMemoryBackend {\r\n    constructor(size) {\r\n        this.memory = new Uint8Array(size);\r\n        this.memory.fill(0xff);\r\n    }\r\n    readMemory(addr) {\r\n        return this.memory[addr];\r\n    }\r\n    writeMemory(addr, value) {\r\n        this.memory[addr] &= value;\r\n    }\r\n    eraseMemory(addr) {\r\n        this.memory[addr] = 0xff;\r\n    }\r\n}\r\nexport const eepromConfig = {\r\n    eepromReadyInterrupt: 0x2c,\r\n    EECR: 0x3f,\r\n    EEDR: 0x40,\r\n    EEARL: 0x41,\r\n    EEARH: 0x42,\r\n    eraseCycles: 28800,\r\n    writeCycles: 28800,\r\n};\r\nconst EERE = 1 << 0;\r\nconst EEPE = 1 << 1;\r\nconst EEMPE = 1 << 2;\r\nconst EERIE = 1 << 3;\r\nconst EEPM0 = 1 << 4;\r\nconst EEPM1 = 1 << 5;\r\nexport class AVREEPROM {\r\n    constructor(cpu, backend, config = eepromConfig) {\r\n        this.cpu = cpu;\r\n        this.backend = backend;\r\n        this.config = config;\r\n        /**\r\n         * Used to keep track on the last write to EEMPE. From the datasheet:\r\n         * The EEMPE bit determines whether setting EEPE to one causes the EEPROM to be written.\r\n         * When EEMPE is set, setting EEPE within four clock cycles will write data to the EEPROM\r\n         * at the selected address If EEMPE is zero, setting EEPE will have no effect.\r\n         */\r\n        this.writeEnabledCycles = 0;\r\n        this.writeCompleteCycles = 0;\r\n        this.cpu.writeHooks[this.config.EECR] = (eecr) => {\r\n            const { EEARH, EEARL, EECR, EEDR } = this.config;\r\n            const addr = (this.cpu.data[EEARH] << 8) | this.cpu.data[EEARL];\r\n            if (eecr & EEMPE) {\r\n                this.writeEnabledCycles = this.cpu.cycles + 4;\r\n            }\r\n            // Read\r\n            if (eecr & EERE) {\r\n                this.cpu.data[EEDR] = this.backend.readMemory(addr);\r\n                // When the EEPROM is read, the CPU is halted for four cycles before the\r\n                // next instruction is executed.\r\n                this.cpu.cycles += 4;\r\n                return true;\r\n            }\r\n            // Write\r\n            if (eecr & EEPE) {\r\n                //  If EEMPE is zero, setting EEPE will have no effect.\r\n                if (this.cpu.cycles >= this.writeEnabledCycles) {\r\n                    return true;\r\n                }\r\n                // Check for write-in-progress\r\n                if (this.cpu.cycles < this.writeCompleteCycles) {\r\n                    return true;\r\n                }\r\n                const eedr = this.cpu.data[EEDR];\r\n                this.writeCompleteCycles = this.cpu.cycles;\r\n                // Erase\r\n                if (!(eecr & EEPM1)) {\r\n                    this.backend.eraseMemory(addr);\r\n                    this.writeCompleteCycles += this.config.eraseCycles;\r\n                }\r\n                // Write\r\n                if (!(eecr & EEPM0)) {\r\n                    this.backend.writeMemory(addr, eedr);\r\n                    this.writeCompleteCycles += this.config.writeCycles;\r\n                }\r\n                this.cpu.data[EECR] |= EEPE;\r\n                // When EEPE has been set, the CPU is halted for two cycles before the\r\n                // next instruction is executed.\r\n                this.cpu.cycles += 2;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n    }\r\n    tick() {\r\n        const { EECR, eepromReadyInterrupt } = this.config;\r\n        if (this.writeEnabledCycles && this.cpu.cycles > this.writeEnabledCycles) {\r\n            this.cpu.data[EECR] &= ~EEMPE;\r\n        }\r\n        if (this.writeCompleteCycles && this.cpu.cycles > this.writeCompleteCycles) {\r\n            this.cpu.data[EECR] &= ~EEPE;\r\n            if (this.cpu.interruptsEnabled && this.cpu.data[EECR] & EERIE) {\r\n                avrInterrupt(this.cpu, eepromReadyInterrupt);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst TWCR_TWINT = 0x80; // TWI Interrupt Flag\r\nconst TWCR_TWEA = 0x40; // TWI Enable Acknowledge Bit\r\nconst TWCR_TWSTA = 0x20; // TWI START Condition Bit\r\nconst TWCR_TWSTO = 0x10; // TWI STOP Condition Bit\r\nconst TWCR_TWWC = 0x8; //TWI Write Collision Flag\r\nconst TWCR_TWEN = 0x4; //  TWI Enable Bit\r\nconst TWCR_TWIE = 0x1; // TWI Interrupt Enable\r\nconst TWSR_TWS_MASK = 0xf8; // TWI Status\r\nconst TWSR_TWPS1 = 0x2; // TWI Prescaler Bits\r\nconst TWSR_TWPS0 = 0x1; // TWI Prescaler Bits\r\nconst TWSR_TWPS_MASK = TWSR_TWPS1 | TWSR_TWPS0; // TWI Prescaler mask\r\nconst TWAR_TWA_MASK = 0xfe; //  TWI (Slave) Address Register\r\nconst TWAR_TWGCE = 0x1; // TWI General Call Recognition Enable Bit\r\nconst STATUS_BUS_ERROR = 0x0;\r\nconst STATUS_TWI_IDLE = 0xf8;\r\n// Master states\r\nconst STATUS_START = 0x08;\r\nconst STATUS_REPEATED_START = 0x10;\r\nconst STATUS_SLAW_ACK = 0x18;\r\nconst STATUS_SLAW_NACK = 0x20;\r\nconst STATUS_DATA_SENT_ACK = 0x28;\r\nconst STATUS_DATA_SENT_NACK = 0x30;\r\nconst STATUS_DATA_LOST_ARBITRATION = 0x38;\r\nconst STATUS_SLAR_ACK = 0x40;\r\nconst STATUS_SLAR_NACK = 0x48;\r\nconst STATUS_DATA_RECEIVED_ACK = 0x50;\r\nconst STATUS_DATA_RECEIVED_NACK = 0x58;\r\n// TODO: add slave states\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport const twiConfig = {\r\n    twiInterrupt: 0x30,\r\n    TWBR: 0xb8,\r\n    TWSR: 0xb9,\r\n    TWAR: 0xba,\r\n    TWDR: 0xbb,\r\n    TWCR: 0xbc,\r\n    TWAMR: 0xbd,\r\n};\r\n// A simple TWI Event Handler that sends a NACK for all events\r\nexport class NoopTWIEventHandler {\r\n    constructor(twi) {\r\n        this.twi = twi;\r\n    }\r\n    start() {\r\n        this.twi.completeStart();\r\n    }\r\n    stop() {\r\n        this.twi.completeStop();\r\n    }\r\n    connectToSlave() {\r\n        this.twi.completeConnect(false);\r\n    }\r\n    writeByte() {\r\n        this.twi.completeWrite(false);\r\n    }\r\n    readByte() {\r\n        this.twi.completeRead(0xff);\r\n    }\r\n}\r\nexport class AVRTWI {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.eventHandler = new NoopTWIEventHandler(this);\r\n        this.nextTick = null;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n        this.cpu.writeHooks[config.TWCR] = (value) => {\r\n            const clearInt = value & TWCR_TWINT;\r\n            if (clearInt) {\r\n                value &= ~TWCR_TWINT;\r\n            }\r\n            const { status } = this;\r\n            if (clearInt && value & TWCR_TWEN) {\r\n                const twdrValue = this.cpu.data[this.config.TWDR];\r\n                this.nextTick = () => {\r\n                    if (value & TWCR_TWSTA) {\r\n                        this.eventHandler.start(status !== STATUS_TWI_IDLE);\r\n                    }\r\n                    else if (value & TWCR_TWSTO) {\r\n                        this.eventHandler.stop();\r\n                    }\r\n                    else if (status === STATUS_START) {\r\n                        this.eventHandler.connectToSlave(twdrValue >> 1, twdrValue & 0x1 ? false : true);\r\n                    }\r\n                    else if (status === STATUS_SLAW_ACK || status === STATUS_DATA_SENT_ACK) {\r\n                        this.eventHandler.writeByte(twdrValue);\r\n                    }\r\n                    else if (status === STATUS_SLAR_ACK || status === STATUS_DATA_RECEIVED_ACK) {\r\n                        const ack = !!(value & TWCR_TWEA);\r\n                        this.eventHandler.readByte(ack);\r\n                    }\r\n                };\r\n                this.cpu.data[config.TWCR] = value;\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.nextTick) {\r\n            this.nextTick();\r\n            this.nextTick = null;\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            const { TWCR, twiInterrupt } = this.config;\r\n            if (this.cpu.data[TWCR] & TWCR_TWIE && this.cpu.data[TWCR] & TWCR_TWINT) {\r\n                avrInterrupt(this.cpu, twiInterrupt);\r\n                this.cpu.data[TWCR] &= ~TWCR_TWINT;\r\n            }\r\n        }\r\n    }\r\n    get prescaler() {\r\n        switch (this.cpu.data[this.config.TWSR] & TWSR_TWPS_MASK) {\r\n            case 0:\r\n                return 1;\r\n            case 1:\r\n                return 4;\r\n            case 2:\r\n                return 16;\r\n            case 3:\r\n                return 64;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid prescaler value!');\r\n    }\r\n    get sclFrequency() {\r\n        return this.freqMHz / (16 + 2 * this.cpu.data[this.config.TWBR] * this.prescaler);\r\n    }\r\n    completeStart() {\r\n        this.updateStatus(this.status === STATUS_TWI_IDLE ? STATUS_START : STATUS_REPEATED_START);\r\n    }\r\n    completeStop() {\r\n        this.cpu.data[this.config.TWCR] &= ~TWCR_TWSTO;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n    }\r\n    completeConnect(ack) {\r\n        if (this.cpu.data[this.config.TWDR] & 0x1) {\r\n            this.updateStatus(ack ? STATUS_SLAR_ACK : STATUS_SLAR_NACK);\r\n        }\r\n        else {\r\n            this.updateStatus(ack ? STATUS_SLAW_ACK : STATUS_SLAW_NACK);\r\n        }\r\n    }\r\n    completeWrite(ack) {\r\n        this.updateStatus(ack ? STATUS_DATA_SENT_ACK : STATUS_DATA_SENT_NACK);\r\n    }\r\n    completeRead(value) {\r\n        const ack = !!(this.cpu.data[this.config.TWCR] & TWCR_TWEA);\r\n        this.cpu.data[this.config.TWDR] = value;\r\n        this.updateStatus(ack ? STATUS_DATA_RECEIVED_ACK : STATUS_DATA_RECEIVED_NACK);\r\n    }\r\n    get status() {\r\n        return this.cpu.data[this.config.TWSR] & TWSR_TWS_MASK;\r\n    }\r\n    updateStatus(value) {\r\n        const { TWCR, TWSR } = this.config;\r\n        this.cpu.data[TWSR] = (this.cpu.data[TWSR] & ~TWSR_TWS_MASK) | value;\r\n        this.cpu.data[TWCR] |= TWCR_TWINT;\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\n// Register bits:\r\nconst SPCR_SPIE = 0x80; //  SPI Interrupt Enable\r\nconst SPCR_SPE = 0x40; // SPI Enable\r\nconst SPCR_DORD = 0x20; // Data Order\r\nconst SPCR_MSTR = 0x10; //  Master/Slave Select\r\nconst SPCR_CPOL = 0x8; // Clock Polarity\r\nconst SPCR_CPHA = 0x4; // Clock Phase\r\nconst SPCR_SPR1 = 0x2; // SPI Clock Rate Select 1\r\nconst SPCR_SPR0 = 0x1; // SPI Clock Rate Select 0\r\nconst SPSR_SPR_MASK = SPCR_SPR1 | SPCR_SPR0;\r\nconst SPSR_SPIF = 0x80; // SPI Interrupt Flag\r\nconst SPSR_WCOL = 0x40; // Write COLlision Flag\r\nconst SPSR_SPI2X = 0x1; // Double SPI Speed Bit\r\nexport const spiConfig = {\r\n    spiInterrupt: 0x22,\r\n    SPCR: 0x4c,\r\n    SPSR: 0x4d,\r\n    SPDR: 0x4e,\r\n};\r\nconst bitsPerByte = 8;\r\nexport class AVRSPI {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.onTransfer = null;\r\n        this.transmissionCompleteCycles = 0;\r\n        this.receivedByte = 0;\r\n        const { SPCR, SPSR, SPDR } = config;\r\n        cpu.writeHooks[SPDR] = (value) => {\r\n            var _a, _b;\r\n            if (!(cpu.data[SPCR] & SPCR_SPE)) {\r\n                // SPI not enabled, ignore write\r\n                return;\r\n            }\r\n            // Write collision\r\n            if (this.transmissionCompleteCycles > this.cpu.cycles) {\r\n                cpu.data[SPSR] |= SPSR_WCOL;\r\n                return true;\r\n            }\r\n            // Clear write collision / interrupt flags\r\n            cpu.data[SPSR] &= ~SPSR_WCOL & ~SPSR_SPIF;\r\n            this.receivedByte = (_b = (_a = this.onTransfer) === null || _a === void 0 ? void 0 : _a.call(this, value)) !== null && _b !== void 0 ? _b : 0;\r\n            this.transmissionCompleteCycles = this.cpu.cycles + this.clockDivider * bitsPerByte;\r\n            return true;\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.transmissionCompleteCycles && this.cpu.cycles >= this.transmissionCompleteCycles) {\r\n            const { SPSR, SPDR } = this.config;\r\n            this.cpu.data[SPSR] |= SPSR_SPIF;\r\n            this.cpu.data[SPDR] = this.receivedByte;\r\n            this.transmissionCompleteCycles = 0;\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            const { SPSR, SPCR, spiInterrupt } = this.config;\r\n            if (this.cpu.data[SPCR] & SPCR_SPIE && this.cpu.data[SPSR] & SPSR_SPIF) {\r\n                avrInterrupt(this.cpu, spiInterrupt);\r\n                this.cpu.data[SPSR] &= ~SPSR_SPIF;\r\n            }\r\n        }\r\n    }\r\n    get isMaster() {\r\n        return this.cpu.data[this.config.SPCR] & SPCR_MSTR ? true : false;\r\n    }\r\n    get dataOrder() {\r\n        return this.cpu.data[this.config.SPCR] & SPCR_DORD ? 'lsbFirst' : 'msbFirst';\r\n    }\r\n    get spiMode() {\r\n        const CPHA = this.cpu.data[this.config.SPCR] & SPCR_CPHA;\r\n        const CPOL = this.cpu.data[this.config.SPCR] & SPCR_CPOL;\r\n        return ((CPHA ? 2 : 0) | (CPOL ? 1 : 0));\r\n    }\r\n    /**\r\n     * The clock divider is only relevant for Master mode\r\n     */\r\n    get clockDivider() {\r\n        const base = this.cpu.data[this.config.SPSR] & SPSR_SPI2X ? 2 : 4;\r\n        switch (this.cpu.data[this.config.SPCR] & SPSR_SPR_MASK) {\r\n            case 0b00:\r\n                return base;\r\n            case 0b01:\r\n                return base * 4;\r\n            case 0b10:\r\n                return base * 16;\r\n            case 0b11:\r\n                return base * 32;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid divider value!');\r\n    }\r\n    /**\r\n     * The SPI freqeuncy is only relevant to Master mode.\r\n     * In slave mode, the frequency can be as high as F(osc) / 4.\r\n     */\r\n    get spiFrequency() {\r\n        return this.freqMHz / this.clockDivider;\r\n    }\r\n}\r\n","/**\r\n * AVR8js\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nexport { CPU } from './cpu/cpu';\r\nexport { avrInstruction } from './cpu/instruction';\r\nexport { avrInterrupt } from './cpu/interrupt';\r\nexport { AVRTimer, timer0Config, timer1Config, timer2Config, } from './peripherals/timer';\r\nexport { AVRIOPort, portAConfig, portBConfig, portCConfig, portDConfig, portEConfig, portFConfig, portGConfig, portHConfig, portJConfig, portKConfig, portLConfig, PinState, } from './peripherals/gpio';\r\nexport { AVRUSART, usart0Config } from './peripherals/usart';\r\nexport { AVREEPROM, EEPROMMemoryBackend, eepromConfig, } from './peripherals/eeprom';\r\nexport * from './peripherals/twi';\r\nexport { spiConfig, AVRSPI } from './peripherals/spi';\r\n","/**\r\n * Minimal Intel HEX loader\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\n\r\nexport function loadHex(source: string, target: Uint8Array) {\r\n  for (const line of source.split('\\n')) {\r\n    if (line[0] === ':' && line.substr(7, 2) === '00') {\r\n      const bytes = parseInt(line.substr(1, 2), 16);\r\n      const addr = parseInt(line.substr(3, 4), 16);\r\n      for (let i = 0; i < bytes; i++) {\r\n        target[addr + i] = parseInt(line.substr(9 + i * 2, 2), 16);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  usart0Config,\r\n  AVRUSART,\r\n  avrInstruction,\r\n  AVRTimer,\r\n  CPU,\r\n  timer0Config,\r\n  AVRIOPort,\r\n  portBConfig,\r\n} from 'avr8js';\r\nimport { loadHex } from './intelhex';\r\n\r\n// ATmega328p params\r\nconst FLASH = 0x40000;\r\n\r\nexport class AVRRunner {\r\n  readonly program = new Uint16Array(FLASH);\r\n  readonly cpu: CPU;\r\n  readonly timer: AVRTimer;\r\n  readonly portB: AVRIOPort;\r\n  readonly usart: AVRUSART;\r\n  readonly speed = 16e6; // 16 MHZ\r\n  private stopped = false;\r\n\r\n  constructor(hex: string) {\r\n    loadHex(hex, new Uint8Array(this.program.buffer));\r\n    this.cpu = new CPU(this.program, 0x2200);\r\n    this.timer = new AVRTimer(this.cpu, {\r\n      ...timer0Config,\r\n      compAInterrupt: 0x02a,\r\n      compBInterrupt: 0x02c,\r\n      ovfInterrupt: 0x02e,\r\n    });\r\n    this.portB = new AVRIOPort(this.cpu, portBConfig);\r\n    this.usart = new AVRUSART(this.cpu, usart0Config, this.speed);\r\n  }\r\n\r\n  async execute(callback: (cpu: CPU) => void) {\r\n    this.stopped = false;\r\n    for (;;) {\r\n      avrInstruction(this.cpu);\r\n      this.timer.tick();\r\n      if (this.cpu.cycles % 500000 === 0) {\r\n        callback(this.cpu);\r\n        await new Promise((resolve) => setTimeout(resolve, 0));\r\n        if (this.stopped) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true;\r\n  }\r\n}\r\n","export const drawPixels = (pixels, canvas, rows, cols, serpentine) => {\n  if (!canvas) return;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  const pixelWidth = canvas.width / cols;\n  const pixelHeight = canvas.height / rows;\n\n  for (const pixel of pixels) {\n    let x;\n    let y;\n\n    if (!serpentine) {\n      if (pixel.y % 2 == 1) {\n        x = pixel.x * pixelWidth;\n      } else {\n        x = (cols - 1) * pixelWidth - pixel.x * pixelWidth;\n      }\n      y = (rows - 1) * pixelHeight - pixel.y * pixelHeight;\n    } else {\n      x = (cols - 1) * pixelWidth - pixel.x * pixelWidth;\n      y = (rows - 1) * pixelHeight - pixel.y * pixelHeight;\n    }\n\n    ctx.beginPath();\n    ctx.rect(x, y, pixelWidth, pixelHeight);\n    ctx.fillStyle = `rgb(${pixel.r}, ${pixel.g}, ${pixel.b})`;\n    ctx.shadowColor = `rgb(${pixel.r}, ${pixel.g}, ${pixel.b})`;\n    ctx.fill();\n  }\n};\n","import { PinState } from 'avr8js';\r\n\r\nconst ZERO_HIGH = 400; // ±150ns\r\nconst ONE_HIGH = 800; // ±150ns\r\nconst ZERO_LOW = 850; // ±150ns\r\nconst ONE_LOW = 450; // ±150ns\r\nconst MARGIN = 160; // 160 gives extra margin for FastLED\r\nconst RESET_TIME = 50000;\r\n\r\nexport class WS2812Controller {\r\n  readonly pixels = new Uint32Array(this.numPixels);\r\n\r\n  private pixelIndex = 0;\r\n  private currentValue = 0;\r\n  private bitIndex = 0;\r\n  private lastState: PinState = PinState.Input;\r\n  private lastTimestamp = 0;\r\n  private detectZero = false;\r\n  private detectOne = false;\r\n  private overflow = false;\r\n  private updated = true;\r\n\r\n  constructor(private numPixels = 0) {}\r\n\r\n  feedValue(pinState: PinState, cpuNanos: number) {\r\n    if (pinState !== this.lastState) {\r\n      const delta = cpuNanos - this.lastTimestamp;\r\n      if (\r\n        !this.overflow &&\r\n        (this.lastState === PinState.High || this.lastState === PinState.InputPullUp)\r\n      ) {\r\n        if (delta >= ZERO_HIGH - MARGIN && delta <= ZERO_HIGH + MARGIN) {\r\n          this.detectZero = true;\r\n        }\r\n        if (delta >= ONE_HIGH - MARGIN && delta <= ONE_HIGH + MARGIN) {\r\n          this.detectOne = true;\r\n        }\r\n        if (pinState === PinState.Low) {\r\n          this.checkLastBit();\r\n        }\r\n      }\r\n      if (this.lastState === PinState.Low) {\r\n        if (this.detectZero && delta >= ZERO_LOW - MARGIN) {\r\n          this.feedBit(0);\r\n        } else if (this.detectOne && delta >= ONE_LOW - MARGIN) {\r\n          this.feedBit(1);\r\n        }\r\n        if (delta >= RESET_TIME) {\r\n          this.resetState();\r\n        }\r\n        this.detectZero = false;\r\n        this.detectOne = false;\r\n      }\r\n\r\n      this.lastState = pinState;\r\n      this.lastTimestamp = cpuNanos;\r\n    }\r\n  }\r\n\r\n  private checkLastBit() {\r\n    // For the last bit in transmission, we might not detect the LOW period, as the signal\r\n    // may not go back HIGH for a long time. Thus, we update the LED based on the predicted\r\n    // value of the last bit\r\n    if (this.bitIndex === 23) {\r\n      this.pixels[this.pixelIndex] = this.currentValue | (this.detectOne ? 1 : 0);\r\n      this.updated = true;\r\n    }\r\n  }\r\n\r\n  private feedBit(value: number) {\r\n    if (value) {\r\n      this.currentValue |= 1 << (23 - this.bitIndex);\r\n    }\r\n    this.bitIndex++;\r\n    if (this.bitIndex === 24) {\r\n      this.pixels[this.pixelIndex++] = this.currentValue;\r\n      this.updated = true;\r\n      this.bitIndex = 0;\r\n      this.currentValue = 0;\r\n    }\r\n    if (this.pixelIndex >= this.numPixels) {\r\n      this.overflow = true;\r\n    }\r\n  }\r\n\r\n  private resetState() {\r\n    this.detectZero = false;\r\n    this.detectOne = false;\r\n    this.overflow = false;\r\n    this.bitIndex = 0;\r\n    this.currentValue = 0;\r\n    this.pixelIndex = 0;\r\n  }\r\n\r\n  update(cpuNanos: number) {\r\n    let result = null;\r\n    if (this.updated) {\r\n      const delta = cpuNanos - this.lastTimestamp;\r\n      if (\r\n        !this.overflow &&\r\n        this.bitIndex === 23 &&\r\n        this.detectZero &&\r\n        this.lastState === PinState.Low &&\r\n        delta >= ZERO_LOW - MARGIN\r\n      ) {\r\n        this.pixels[this.pixelIndex] = this.currentValue;\r\n      }\r\n      result = this.pixels;\r\n      this.updated = false;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { AVRRunner } from './execute';\nimport { drawPixels } from './drawPixels';\nimport { WS2812Controller } from './ws2812';\nconst MHZ = 16000000;\n\nexport default class LEDuino {\n  constructor({ rows = 14, cols = 14, canvas, serpentine = true, hex, onPixels, onSerial }) {\n    this.rows = rows;\n    this.cols = cols;\n    this.canvas = canvas;\n    this.onPixels = onPixels;\n    this.onSerial = onSerial;\n    this.serpentine = serpentine;\n    this.hex = hex;\n\n    // Used for the precompiled code\n    this.dataPin = 12;\n  }\n\n  onPixels = () => console.log('Pixels callback was not defined');\n  onSerial = () => console.log('Serial callback was not defined');\n\n  cpuNanos = () => Math.round((this.runner.cpu.cycles / MHZ) * 1000000000);\n\n  listener = () => {\n    this.matrixController.feedValue(this.runner.portB.pinState(6), this.cpuNanos());\n  };\n\n  set hex(newHex) {\n    if (newHex === this._hex) return;\n\n    this.runner?.portB.removeListener(this.listener);\n    this.runner?.stop();\n\n    this._hex = newHex;\n    this.runner = new AVRRunner(this._hex);\n    this.matrixController = new WS2812Controller(this.cols * this.rows);\n\n    this.runner.portB.addListener(this.listener);\n\n    this.runner.usart.onByteTransmit = (value) => this.onSerial(String.fromCharCode(value));\n\n    this.start();\n  }\n\n  stop = () => {\n    this.runner?.stop();\n  };\n\n  start = () => {\n    this.runner?.execute((_cpu) => {\n      const pixels = this.matrixController.update(this.cpuNanos());\n\n      if (!pixels) return;\n      const pixelsToDraw = [];\n\n      for (let row = 0; row < this.rows; row++) {\n        for (let col = 0; col < this.cols; col++) {\n          const value = pixels[row * this.cols + col];\n\n          let x = col;\n          if (this.serpentine) x = row % 2 ? this.cols - col - 1 : col;\n\n          pixelsToDraw.push({\n            x,\n            y: row,\n            b: value & 0xff,\n            r: (value >> 8) & 0xff,\n            g: (value >> 16) & 0xff,\n          });\n        }\n      }\n\n      if (this.canvas) {\n        drawPixels(pixelsToDraw, this.canvas, this.rows, this.cols, this.serpentine);\n      } else {\n        this.onPixels(pixelsToDraw);\n      }\n    });\n  };\n}\n\nmodule.exports = {\n  LEDuino,\n};\n","export { LEDuino } from './arduino';\nexport { drawPixels } from './drawPixels';\n","export default {\n  stdout:\n    'Sketch uses 6654 bytes (2%) of program storage space. Maximum is 253952 bytes.\\nGlobal variables use 925 bytes (11%) of dynamic memory, leaving 7267 bytes for local variables. Maximum is 8192 bytes.\\n',\n  stderr: '',\n  hex:\n    ':100000000C9495000C94C6000C94C6000C94C60089\\r\\n:100010000C94C6000C94C6000C94C6000C94C60048\\r\\n:100020000C94C6000C94C6000C94C6000C94C60038\\r\\n:100030000C94C6000C94C6000C94C6000C94C60028\\r\\n:100040000C94C6000C94C6000C94C6000C94C60018\\r\\n:100050000C94C6000C94C6000C94C6000C941907AE\\r\\n:100060000C94C6000C94E3060C94B9060C94C600DC\\r\\n:100070000C94C6000C94C6000C94C6000C94C600E8\\r\\n:100080000C94C6000C94C6000C94C6000C94C600D8\\r\\n:100090000C94C6000C94C6000C94C6000C94C600C8\\r\\n:1000A0000C94C6000C94C6000C94C6000C94C600B8\\r\\n:1000B0000C94C6000C94C6000C94C6000C94C600A8\\r\\n:1000C0000C94C6000C94C6000C94C6000C94C60098\\r\\n:1000D0000C94C6000C94C6000C94C6000C94C60088\\r\\n:1000E0000C94C6000C9491030C94E6050C942A061B\\r\\n:1000F0000C946D060C94B6010C9463070C94700676\\r\\n:100100000C947A010C9474060C94E4050C945D0232\\r\\n:100110000C9477010C9410020C94CA010C94B7064D\\r\\n:100120000C94A7010C94D801630711241FBECFEFD4\\r\\n:10013000D1E2DEBFCDBF00E00CBF12E0A0E0B2E034\\r\\n:10014000E2EAF9E100E00BBF02C007900D92AC3586\\r\\n:10015000B107D9F725E0ACE5B2E001C01D92AD3999\\r\\n:10016000B207E1F710E0C5E9D0E000E006C0219752\\r\\n:100170000109802FFE010E94B30CC439D10780E031\\r\\n:100180000807A9F70E949F070C94CF0C0C9400005D\\r\\n:10019000FB01DC016C9112967C91862F880F880FF1\\r\\n:1001A000880F35E5282F239F020E20E0211D112402\\r\\n:1001B000922F562F5074462F407267FD2EC051115A\\r\\n:1001C0000FC0822F80954423B9F09B5A30E08BEA10\\r\\n:1001D00028EC482F429F040E40E0411D842F18C098\\r\\n:1001E000411113C0382F2AEA329F030E30E0311D2F\\r\\n:1001F00011248BEA831B965530E08111E9CF30E062\\r\\n:1002000091112EC040E0892F3CC080E0322F9095A4\\r\\n:10021000911126C0482F80E02BC0511116C041110A\\r\\n:100220000CC0382F2AEA329F030E30E0311D112412\\r\\n:100230009BEA931B3B5A80E0EBCF322F3095822F05\\r\\n:1002400040E08823A9F090E0C3CF411105C085E5C7\\r\\n:10025000820F3BEA321BF4CF8AEA820F90E0FACF9A\\r\\n:10026000292F48EC249F020E20E0211D482F822FC9\\r\\n:1002700090E0332331F028EC329F030E30E0311D43\\r\\n:10028000932F112427E3229F020E20E0211D112429\\r\\n:10029000322F340F820F920F7F3F09F420C020E0ED\\r\\n:1002A000772321F0779F212D09F02F5F2223D9F0AA\\r\\n:1002B000332321F0329F030E30E0311D882331F0CB\\r\\n:1002C000482F429F040E40E0411D842F992331F0B6\\r\\n:1002D000492F429F040E40E0411D942F112430838A\\r\\n:1002E00081839283089590E080E030E0F8CF80E948\\r\\n:1002F00091E00895AF92BF92CF92DF92EF92FF927A\\r\\n:100300000F931F93CF93DF936C017B018B01040F3D\\r\\n:10031000151FEB015E01AE18BF08C017D10759F0D9\\r\\n:100320006991D601ED91FC910190F081E02DC6011B\\r\\n:100330001995892B79F7C501DF91CF911F910F9105\\r\\n:10034000FF90EF90DF90CF90BF90AF900895FC01A9\\r\\n:10035000538D448D252F30E0842F90E0821B930B2A\\r\\n:10036000541710F0CF96089501970895FC01918DD0\\r\\n:10037000828D981761F0A28DAE0FBF2FB11D5D96D3\\r\\n:100380008C91928D9F5F9F73928F90E008958FEF75\\r\\n:100390009FEF0895FC01918D828D981731F0828D29\\r\\n:1003A000E80FF11D858D90E008958FEF9FEF089580\\r\\n:1003B000FC01918D228D892F90E0805C9F4F821BE4\\r\\n:1003C00091098F739927089583EF94E00E94D801D3\\r\\n:1003D00021E0892B09F420E0822F0895FC01A48DEF\\r\\n:1003E000A80FB92FB11DA35ABF4F2C91848D90E057\\r\\n:1003F00001968F739927848FA689B7892C93A0893A\\r\\n:10040000B1898C91837080648C93938D848D9813C3\\r\\n:1004100006C00288F389E02D80818F7D8083089556\\r\\n:10042000EF92FF920F931F93CF93DF93EC0181E044\\r\\n:10043000888F9B8D8C8D98131AC0E889F9898081EB\\r\\n:1004400085FF15C09FB7F894EE89FF896083E8891E\\r\\n:10045000F98980818370806480839FBF81E090E010\\r\\n:10046000DF91CF911F910F91FF90EF900895F62E9D\\r\\n:100470000B8D10E00F5F1F4F0F731127E02E8C8D37\\r\\n:100480008E110CC00FB607FCFACFE889F98980817C\\r\\n:1004900085FFF5CFCE010E94EE01F1CFEB8DEC0F81\\r\\n:1004A000FD2FF11DE35AFF4FF0829FB7F8940B8F99\\r\\n:1004B000EA89FB8980818062CFCFCF93DF93EC0103\\r\\n:1004C000888D8823B9F0AA89BB89E889F9898C913C\\r\\n:1004D00085FD03C0808186FD0DC00FB607FCF7CFF8\\r\\n:1004E0008C9185FFF2CF808185FFEDCFCE010E94F8\\r\\n:1004F000EE01E9CFDF91CF91089580E090E0892B64\\r\\n:1005000029F00E94E40181110E94000080E090E047\\r\\n:10051000892B49F080E090E0892B29F00E940000AF\\r\\n:1005200081110E94000080E090E0892B49F080E07A\\r\\n:1005300090E0892B29F00E94000081110E940000A8\\r\\n:1005400080E090E0892B49F080E090E0892B29F051\\r\\n:100550000E94000081110C94000008953FB7F894A8\\r\\n:100560008091630290916402A0916502B09166024D\\r\\n:1005700026B5A89B05C02F3F19F00196A11DB11DFE\\r\\n:100580003FBFBA2FA92F982F8827BC01CD01620F3A\\r\\n:10059000711D811D911D42E0660F771F881F991FF5\\r\\n:1005A0004A95D1F708952FB7F89460915F02709142\\r\\n:1005B000600280916102909162022FBF08958F9234\\r\\n:1005C0009F92AF92BF92CF92DF92EF92FF920F93E2\\r\\n:1005D0001F93CF93DF936C01EB017A01480159011E\\r\\n:1005E0008FEFC816D10409F010F4DC2CCC240E9443\\r\\n:1005F000D3029B01AC01281939094A095B09D601CC\\r\\n:100600000E94940C9B01AC01A8E1B1E00E94940C03\\r\\n:10061000AC0166277727CA0133E0969587953A950E\\r\\n:10062000E1F797709A0122273074232B31F02FEFD6\\r\\n:1006300037E0F901E81BF90BCF01E92FEE0FEE0FC0\\r\\n:10064000F0E0E65DFD4F2081318186959281899FA2\\r\\n:10065000200D311D112457FF03C03195219531091B\\r\\n:100660003058EC1AFD0A2E9DB0013F9DC001E0E01C\\r\\n:100670003E9D700D811D9E1F2F9D700D811D9E1F23\\r\\n:100680001124620F731F8E1F9E1F8C0F9D1FDF9101\\r\\n:10069000CF911F910F91FF90EF90DF90CF90BF907F\\r\\n:1006A000AF909F908F9008950F931F93CF93DF93F8\\r\\n:1006B00020915D022F5F322F377030935D0220FF53\\r\\n:1006C0002BC020E831FD2064347009F02062205FE7\\r\\n:1006D000FC01EC01239600E011E06485662329F01B\\r\\n:1006E00070E0C8010E94570C6F5F6187322F369F00\\r\\n:1006F000030E30E0311D1124311110C01682662323\\r\\n:1007000011F0615061873196EC17FD0731F7DF91E9\\r\\n:10071000CF911F910F91089520E0D4CF31503683AF\\r\\n:10072000EECF4F925F926F927F928F92AF92BF9275\\r\\n:10073000CF92DF92EF920F931F93CF93DF933C0101\\r\\n:10074000EB010E94AE02F30127853089621B730B17\\r\\n:100750006A307105B0F3F894E881F98175B170647D\\r\\n:1007600065B16F7B65B9CA848F812C2D281B822FC0\\r\\n:100770002F83BF844A805B801D850C85DE841F5FCC\\r\\n:100780000F5FD3949E813885A984EB844181D20187\\r\\n:1007900020E0C32F522F322F31814427889431110A\\r\\n:1007A000380F08F43FEF8195889410FD430F47956B\\r\\n:1007B000889411FD430F4795889412FD430F479588\\r\\n:1007C000889413FD430F4795889414FD430F479574\\r\\n:1007D000889415FD430F4795889416FD430F479560\\r\\n:1007E000889417FD430F47958894232F1111242FC8\\r\\n:1007F0008C0D422F002C75B900C047FF65B93081C0\\r\\n:100800002227889400C000C0002C65B93111390F2F\\r\\n:1008100000C0002C75B900C046FF65B908F43FEF71\\r\\n:100820009195889400C000C0002C65B900FD230F8D\\r\\n:1008300000C0002C75B900C045FF65B927958894A4\\r\\n:1008400001FD230F00C000C0002C65B927958894D6\\r\\n:1008500000C0002C75B900C044FF65B902FD230F2C\\r\\n:100860002795889400C000C0002C65B903FD230FB4\\r\\n:1008700000C0002C75B900C043FF65B92795889466\\r\\n:1008800004FD230F00C000C0002C65B92795889493\\r\\n:1008900000C0002C75B900C042FF65B905FD230FEB\\r\\n:1008A0002795889400C000C0002C65B906FD230F71\\r\\n:1008B00000C0002C75B900C041FF65B92795889428\\r\\n:1008C00007FD230F00C000C0002C65B92795889450\\r\\n:1008D00000C0002C75B900C040FF65B9432F01115D\\r\\n:1008E000422F9A0D00C000C0002C65B900C000C0A6\\r\\n:1008F000002C75B900C047FF65B932812227889462\\r\\n:1009000000C000C0002C65B931113C0F00C0002CA4\\r\\n:1009100075B900C046FF65B908F43FEFEB0DF11D56\\r\\n:1009200000C000C0002C65B9D0FC230F00C0002C13\\r\\n:1009300075B900C045FF65B927958894D1FC230F90\\r\\n:1009400000C000C0002C65B92795889400C0002C19\\r\\n:1009500075B900C044FF65B9D2FC230F2795889470\\r\\n:1009600000C000C0002C65B9D3FC230F00C0002CD0\\r\\n:1009700075B900C043FF65B927958894D4FC230F4F\\r\\n:1009800000C000C0002C65B92795889400C0002CD9\\r\\n:1009900075B900C042FF65B9D5FC230F279588942F\\r\\n:1009A00000C000C0002C65B9D6FC230F00C0002C8D\\r\\n:1009B00075B900C041FF65B927958894D7FC230F0E\\r\\n:1009C00000C000C0002C65B92795889400C0002C99\\r\\n:1009D00075B900C040FF65B9432FD110422FC195B2\\r\\n:1009E00000C000C0002C65B9CE0D00C000C075B9B4\\r\\n:1009F00000C047FF65B931812227889400C000C03C\\r\\n:100A0000002C65B93111380F00C0002C75B900C039\\r\\n:100A100046FF65B908F43FEF8195889400C000C097\\r\\n:100A2000002C65B910FD230F00C0002C75B900C063\\r\\n:100A300045FF65B92795889411FD230F00C000C0BC\\r\\n:100A4000002C65B92795889400C0002C75B900C0AA\\r\\n:100A500044FF65B912FD230F2795889400C000C09C\\r\\n:100A6000002C65B913FD230F00C0002C75B900C020\\r\\n:100A700043FF65B92795889414FD230F00C000C07B\\r\\n:100A8000002C65B92795889400C0002C75B900C06A\\r\\n:100A900042FF65B915FD230F2795889400C000C05B\\r\\n:100AA000002C65B916FD230F00C0002C75B900C0DD\\r\\n:100AB00041FF65B92795889417FD230F00C000C03A\\r\\n:100AC000002C65B92795889400C0002C75B900C02A\\r\\n:100AD00040FF65B9432F1111422F8C0D00C000C09B\\r\\n:100AE000002C65B9119709F086CE20EE31E0D201D5\\r\\n:100AF0000E948D0CDC01CB01F4E0B695A79597958B\\r\\n:100B00008795FA95D1F730E020E0B901EAE94E9EE9\\r\\n:100B1000040C611D5E9E600D711D1124650D711D1B\\r\\n:100B2000860F971FA11DB11D893E43E09407A105C3\\r\\n:100B3000B10508F434C0885E9340A109B10942E0D0\\r\\n:100B4000B695A795979587954A95D1F747E0849FE5\\r\\n:100B5000080E211D949F200D311D1124290F311DD8\\r\\n:100B600060915C0270E0860F971F820F931F409187\\r\\n:100B70005F02509160026091610270916202292FC0\\r\\n:100B80003327420F531F611D711D40935F02509325\\r\\n:100B90006002609361027093620280935C027894B9\\r\\n:100BA0000E94AE02F301708B6787DF91CF911F9196\\r\\n:100BB0000F91EF90DF90CF90BF90AF908F907F908C\\r\\n:100BC0006F905F904F900895269A08950F931F930A\\r\\n:100BD000CF93DF93CDB7DEB762970FB6F894DEBF41\\r\\n:100BE0000FBECDBF8C01F901DC011C968C917A837C\\r\\n:100BF00069835C834B835E834D8390819D87918164\\r\\n:100C00009E8792819F878130F1F4CE0101960E94E8\\r\\n:100C1000540383E0888B1A8A198AD801ED91FC91DC\\r\\n:100C20000484F585E02DBE016F5F7F4FC8011995E3\\r\\n:100C300062960FB6F894DEBF0FBECDBFDF91CF91A5\\r\\n:100C40001F910F9108951C861B861A861986188697\\r\\n:100C50001F82DFCF0F931F93CF93DF93CDB7DEB704\\r\\n:100C600062970FB6F894DEBF0FBECDBF8C01F901BD\\r\\n:100C7000DC011C968C917A8369835C834B835E8351\\r\\n:100C80004D8390819D8791819E8792819F8781303E\\r\\n:100C9000E9F4CE0101960E945403188A1A8A198A2F\\r\\n:100CA000D801ED91FC910484F585E02DBE016F5FC4\\r\\n:100CB0007F4FC801199562960FB6F894DEBF0FBE3C\\r\\n:100CC000CDBFDF91CF911F910F9108951C861B8698\\r\\n:100CD0001A86198618861F82E0CF90E080E008957A\\r\\n:100CE000FC01858596850895CF93DF9300D000D0D1\\r\\n:100CF000CDB7DEB7AB011C821D821E82DC01ED91F7\\r\\n:100D0000FC910190F081E02D19821A821B829E01D4\\r\\n:100D10002F5F3F4FBE016C5F7F4F199526960FB630\\r\\n:100D2000F894DEBF0FBECDBFDF91CF910895282F7D\\r\\n:100D300086FD2095E22FEF732F7086FD2F5FE695DD\\r\\n:100D4000E695E695E670F0E0E050FE4F9181929FC7\\r\\n:100D5000902D212D112492959F702295207F922B0A\\r\\n:100D60002081920F87FD919580E8890F08950E9458\\r\\n:100D7000CA0C1F920F920FB60F9211240BB60F924E\\r\\n:100D80002F933F934F935F936F937F938F939F9393\\r\\n:100D9000AF93BF93EF93FF9383EF94E00E94EE0134\\r\\n:100DA000FF91EF91BF91AF919F918F917F916F9143\\r\\n:100DB0005F914F913F912F910F900BBE0F900FBEFF\\r\\n:100DC0000F901F9018951F920F920FB60F9211243B\\r\\n:100DD0000BB60F922F938F939F93EF93FF93E09116\\r\\n:100DE0000305F09104058081E0910905F0910A0561\\r\\n:100DF00082FD1DC0908180910C058F5F8F732091C3\\r\\n:100E00000D05821741F0E0910C05F0E0ED50FB4F2D\\r\\n:100E1000958F80930C05FF91EF919F918F912F916A\\r\\n:100E20000F900BBE0F900FBE0F901F9018958081F2\\r\\n:100E3000F2CF1F920F920FB60F9211242F933F9370\\r\\n:100E40008F939F93AF93BF9380915F0290916002C5\\r\\n:100E5000A0916102B091620230915E0223E0230F03\\r\\n:100E60002D3758F50196A11DB11D20935E02809388\\r\\n:100E70005F0290936002A0936102B093620280913E\\r\\n:100E8000630290916402A0916502B091660201969E\\r\\n:100E9000A11DB11D8093630290936402A09365022B\\r\\n:100EA000B0936602BF91AF919F918F913F912F9127\\r\\n:100EB0000F900FBE0F901F90189526E8230F0296F3\\r\\n:100EC000A11DB11DD2CFE3EFF4E01382128288EEB0\\r\\n:100ED00093E0A0E0B0E084839583A683B7838DE49C\\r\\n:100EE00092E09183808385EC90E09587848784EC01\\r\\n:100EF00090E09787868780EC90E0918B808B81ECE7\\r\\n:100F000090E0938B828B82EC90E0958B848B86ECC7\\r\\n:100F100090E0978B868B118E128E138E148EE0E9E3\\r\\n:100F2000F5E08FEF808312821182148613868FEF93\\r\\n:100F30009FEFDC0187839087A187B2870895CF93C5\\r\\n:100F4000DF93CDB7DEB76A970FB6F894DEBF0FBE5A\\r\\n:100F5000CDBF789484B5826084BD84B5816084BD42\\r\\n:100F600085B5826085BD85B5816085BD80916E0047\\r\\n:100F7000816080936E001092810080918100826078\\r\\n:100F800080938100809181008160809381008091B5\\r\\n:100F900080008160809380008091B10084608093A4\\r\\n:100FA000B1008091B00081608093B0008091910089\\r\\n:100FB0008260809391008091910081608093910084\\r\\n:100FC000809190008160809390008091A100826068\\r\\n:100FD0008093A1008091A10081608093A100809105\\r\\n:100FE000A00081608093A0008091210182608093A5\\r\\n:100FF0002101809121018160809321018091200154\\r\\n:1010000081608093200180917A00846080937A00CF\\r\\n:1010100080917A00826080937A0080917A0081606A\\r\\n:1010200080937A0080917A00806880937A00109291\\r\\n:10103000C10080917A02811145C010926C02109219\\r\\n:101040006B028FEF80936F02809370028093710226\\r\\n:1010500080937202809373028093740281E0809384\\r\\n:101060007502109277021092760210926E02109220\\r\\n:101070006D028091ED049091EE04892B31F489E6A4\\r\\n:1010800092E09093EE048093ED04E0916702F0917A\\r\\n:101090006802309721F089E692E09583848389E69F\\r\\n:1010A00092E0909368028093670210927902109206\\r\\n:1010B00078028CE192E090936A028093690281E069\\r\\n:1010C00080937A02269A82E892E090936C02809351\\r\\n:1010D0006B0284EC90E0909377028093760280918B\\r\\n:1010E000930590919405A0919505B0919605843C47\\r\\n:1010F00029E09207A105B10520F484EC99E0A0E075\\r\\n:10110000B0E08093930590939405A0939505B093D8\\r\\n:1011100096058FEF80939005E0910305F09104050B\\r\\n:1011200082E08083E091FF04F09100051082E0915D\\r\\n:101130000105F09102058FEC808310920B05E09180\\r\\n:101140000705F091080586E08083E0910505F091A0\\r\\n:101150000605808180618083E0910505F091060598\\r\\n:10116000808188608083E0910505F091060580818B\\r\\n:1011700080688083E0910505F091060580818F7D70\\r\\n:10118000808300E010E0980148E651E068E97EEFD6\\r\\n:101190008CE594E00E94DF02BC0190E080E00E94B8\\r\\n:1011A000B90B6B017C01C092E304D092E404E0929D\\r\\n:1011B000E504F092E60400EE1EE220E030E048E6AE\\r\\n:1011C00051E068E97EEF86E090E00E94DF02BC011A\\r\\n:1011D00090E080E00E94B90B2B013C014092DF04BB\\r\\n:1011E0005092E0046092E1047092E2048091D7048E\\r\\n:1011F000811119C00E94D3026093CF047093D00470\\r\\n:101200008093D1049093D20481E090E0A0E0B0E01C\\r\\n:101210008093D3049093D404A093D504B093D604C0\\r\\n:1012200091E09093D7040E94D3020091CF041091D3\\r\\n:10123000D0042091D1043091D204601B710B820B39\\r\\n:10124000930B0091D3041091D4042091D5043091D4\\r\\n:10125000D604601771078207930778F00E94D302C3\\r\\n:101260006093CF047093D0048093D1049093D20400\\r\\n:101270008091CE048F5F8093CE041A8619861C86D7\\r\\n:101280001B86B12CA12C9DE0892E912C8A189B08DD\\r\\n:10129000188A1F861E861D86312C212CA985BA85A9\\r\\n:1012A0001D97BA8FA98F8B859C85092E000CAA0BE0\\r\\n:1012B000BB0B8D8B9E8BAF8BB88FC1018170992733\\r\\n:1012C000AFEF2A1A3A0A892B09F46EC1E98DFA8D1B\\r\\n:1012D000E80DF91DF887EF8300E010E098014AE07F\\r\\n:1012E00050E061E070E08AE090E00E94DF029C0143\\r\\n:1012F000A29EC001A39E900DB29E900D1124BC0130\\r\\n:1013000090E080E00E94B90BA30192010E941E0BA5\\r\\n:10131000698B7A8B8B8B9C8B6D897E898F89988D5D\\r\\n:101320000E94BB0BA70196010E941E0B0E948A0B14\\r\\n:10133000862F0E949706182F69897A898B899C8944\\r\\n:101340000E948A0B698338EC3A831B830F811885CE\\r\\n:10135000000F111F8F819885080F191F0E571D4F01\\r\\n:10136000B801CE0101960E94C800AD85BE85BD01C1\\r\\n:10137000BB0F880B990B0E94BB0BA70196010E9423\\r\\n:101380001E0B698B7A8B8B8B9C8BEF85F889BF0149\\r\\n:10139000FF0F880B990B0E94BB0BA30192010E94C7\\r\\n:1013A0001E0B0E948A0B862F0E9497068F836989E5\\r\\n:1013B0007A898B899C890E948A0B6C83F8ECFD8367\\r\\n:1013C0002F812E83BE016F5F7F4FCE0104960E9456\\r\\n:1013D000C8003981D8012C91230F08F42FEFF801B0\\r\\n:1013E00020833A812181230F08F42FEF11962C934B\\r\\n:1013F00011973B8112962C91230F08F42FEF228333\\r\\n:10140000FEE08F0E911C2D853E852D5F3F4F3E8760\\r\\n:101410002D878F8598894E96988B8F879EE0291609\\r\\n:10142000310409F04ACFAFEFAA1ABA0AEB85FC855E\\r\\n:101430007E96FC87EB8729853A852E5F3F4F3A875A\\r\\n:1014400029873EE0A316B10409F01DCFF090900566\\r\\n:101450008091930590919405A0919505B091960582\\r\\n:10146000892B8A2B8B2BD9F00E94AE020091EF04BE\\r\\n:101470001091F0042091F1043091F204601B710B83\\r\\n:10148000820B930B00919305109194052091950583\\r\\n:10149000309196056017710782079307C8F20E9482\\r\\n:1014A000AE026093EF047093F0048093F104909384\\r\\n:1014B000F204E0919B05F0919C05309759F0409122\\r\\n:1014C0009705509198056091990570919A058F2D17\\r\\n:1014D0001995F82E0091ED041091EE044F2C512C2B\\r\\n:1014E000712C612C0115110509F461C0D8011C96FD\\r\\n:1014F000EC901C978091910590919205843691050E\\r\\n:1015000010F41C961C92D801ED91FC91A280B3803E\\r\\n:1015100019821A821B82FF2089F1F8013696D12C9C\\r\\n:10152000C12C2191222319F19280992001F130E000\\r\\n:1015300050E040E02F5F3F4F4F4F5F4FC301B2017C\\r\\n:101540000E94470C9B01AC01892D90E0B0E0A0E027\\r\\n:10155000BC01CD016F5F7F4F8F4F9F4F0E94470CA3\\r\\n:10156000A1E0B0E0AC0FBD1FAC0DBD1D8C93BFEF73\\r\\n:10157000CB1ADB0A23E0C216D10499F6D8011D96D6\\r\\n:101580004D915C911E9712966D917C919E012F5FFB\\r\\n:101590003F4FC801F5011995D8011C96EC921C9794\\r\\n:1015A00014960D911C919ECF98868F8295CE809136\\r\\n:1015B000EB049091EC048C010F5F1F4F1093EC042F\\r\\n:1015C0000093EB044997B4F10E94D302C090E70462\\r\\n:1015D000D090E804E090E904F090EA049B01AC01AB\\r\\n:1015E0002C193D094E095F0921F421E030E040E06B\\r\\n:1015F00050E0E8EEF3E00E9FB0010F9F700D1E9FCC\\r\\n:10160000700D1124072E000C880B990B0E946B0C97\\r\\n:1016100030939205209391051092EC041092EB0404\\r\\n:101620000E94D3026093E7047093E8048093E90476\\r\\n:101630009093EA040E947D02A4CD5058BB27AA27AC\\r\\n:101640000E94350B0C940D0C0E94FF0B38F00E9489\\r\\n:10165000060C20F039F49F3F19F426F40C94FC0B8F\\r\\n:101660000EF4E095E7FB0C94F60BE92F0E941E0C9C\\r\\n:1016700058F3BA17620773078407950720F079F4C7\\r\\n:10168000A6F50C94400C0EF4E0950B2EBA2FA02D6D\\r\\n:101690000B01B90190010C01CA01A0011124FF271F\\r\\n:1016A000591B99F0593F50F4503E68F11A16F0401A\\r\\n:1016B000A22F232F342F4427585FF3CF4695379519\\r\\n:1016C0002795A795F0405395C9F77EF41F16BA0BDE\\r\\n:1016D000620B730B840BBAF09150A1F0FF0FBB1F8C\\r\\n:1016E000661F771F881FC2F70EC0BA0F621F731FD5\\r\\n:1016F000841F48F4879577956795B795F7959E3F32\\r\\n:1017000008F0B0CF9395880F08F09927EE0F9795C2\\r\\n:10171000879508950E94260C88F09F5798F0B92F5E\\r\\n:101720009927B751B0F0E1F0660F771F881F991F16\\r\\n:101730001AF0BA95C9F714C0B13091F00E94400C6C\\r\\n:10174000B1E008950C94400C672F782F8827B85F7C\\r\\n:1017500039F0B93FCCF3869577956795B395D9F76E\\r\\n:101760003EF490958095709561957F4F8F4F9F4F78\\r\\n:101770000895E89409C097FB3EF490958095709584\\r\\n:1017800061957F4F8F4F9F4F9923A9F0F92F96E9CD\\r\\n:10179000BB279395F695879577956795B795F11142\\r\\n:1017A000F8CFFAF4BB0F11F460FF1BC06F5F7F4FDF\\r\\n:1017B0008F4F9F4F16C0882311F096E911C07723F1\\r\\n:1017C00021F09EE8872F762F05C0662371F096E8FA\\r\\n:1017D000862F70E060E02AF09A95660F771F881FC9\\r\\n:1017E000DAF7880F9695879597F9089597F99F6787\\r\\n:1017F00080E870E060E008959FEF80EC0895002499\\r\\n:101800000A941616170618060906089500240A9465\\r\\n:1018100012161306140605060895092E0394000CEB\\r\\n:1018200011F4882352F0BB0F40F4BF2B11F460FF7A\\r\\n:1018300004C06F5F7F4F8F4F9F4F089557FD9058A3\\r\\n:10184000440F551F59F05F3F71F04795880F97FB84\\r\\n:10185000991F61F09F3F79F087950895121613063E\\r\\n:101860001406551FF2CF4695F1DF08C0161617066D\\r\\n:101870001806991FF1CF86957105610508940895A2\\r\\n:10188000E894BB2766277727CB0197F90895DB01FA\\r\\n:101890008F939F930E94940CBF91AF91A29F800D54\\r\\n:1018A000911DA39F900DB29F900D1124089597FB59\\r\\n:1018B000072E16F4009407D077FD09D00E949F0CE4\\r\\n:1018C00007FC05D03EF4909581959F4F0895709543\\r\\n:1018D00061957F4F0895A1E21A2EAA1BBB1BFD0143\\r\\n:1018E0000DC0AA1FBB1FEE1FFF1FA217B307E407FF\\r\\n:1018F000F50720F0A21BB30BE40BF50B661F771F57\\r\\n:10190000881F991F1A9469F7609570958095909536\\r\\n:101910009B01AC01BD01CF0108950E94BB0CB7FF34\\r\\n:101920000895821B930B08950E94BB0CA59F900DF8\\r\\n:10193000B49F900DA49F800D911D11240895AA1BA2\\r\\n:10194000BB1B51E107C0AA1FBB1FA617B70710F0AA\\r\\n:10195000A61BB70B881F991F5A95A9F780959095DC\\r\\n:10196000BC01CD010895EE0FFF1F881F8BBF0790AC\\r\\n:10197000F691E02D1994A29FB001B39FC001A39FDF\\r\\n:10198000700D811D1124911DB29F700D811D1124B8\\r\\n:10199000911D089581E090E0F8940C94CF0CF89498\\r\\n:0219A000FFCF77\\r\\n:1019A200003131295A1B750A00000000B706B7063C\\r\\n:1019B200B706740670066D06000000002A06E605EA\\r\\n:1019C200E405740670067701910300003100F918EE\\r\\n:1019D2003000FB302C001C472600825A1F006D6A23\\r\\n:1019E200170041760E00897D040000000010027A83\\r\\n:0C19F20001A7015D02D801B601CA010086\\r\\n:00000001FF\\r\\n',\n  lineInfo: {},\n};\n","import 'regenerator-runtime/runtime';\nimport { LEDuino } from '@elliottkember/leduino';\nimport build from './build';\n\nnew LEDuino({\n  rows: 14,\n  cols: 14,\n  serpentine: true,\n  hex: build.hex,\n  canvas: document.getElementById('canvas'),\n  // onPixels: (pixels) => console.log(pixels.length),\n  // onSerial: (text) => console.log(text),\n});\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}